{
  "version": "3.2",
  "log": [
    {
      "SafeMath": {
        "src": "contracts/common/SafeMath.sol:16",
        "version": {
          "withMetadata": "e18786b96bcf28cd1a63dccab45b4138ccdb3c5ec80bf7f4f3a8a6185a00b60b",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Governance": {
        "src": "contracts/governance/Governance.sol:15",
        "version": {
          "withMetadata": "3d30a6628e6ae58e648f3afa5188f47deaea2deb357492d38f4fcef29e432890",
          "withoutMetadata": "904d1c6aaa5febe455ddd1b1232fa99b87363235f3df9edd5373a9143ff91121",
          "linkedWithoutMetadata": "904d1c6aaa5febe455ddd1b1232fa99b87363235f3df9edd5373a9143ff91121"
        },
        "inherit": [
          "Version",
          "GovernanceSettings",
          "Constants",
          "StatusConstants",
          "ReentrancyGuard",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "LRC",
          "Proposal"
        ],
        "methods": [
          "initialize(address,address)",
          "proposalParams(uint256)",
          "proposalOptionState(uint256,uint256)",
          "proposalState(uint256)",
          "getVote(address,address,uint256)",
          "tasksCount()",
          "getTask(uint256)",
          "getActiveProposals()",
          "vote(address,uint256,uint256[])",
          "createProposal(address)",
          "cancelProposal(uint256)",
          "handleTasks(uint256,uint256)",
          "tasksCleanup(uint256)",
          "calculateVotingTally(uint256)",
          "cancelVote(address,uint256)",
          "recountVote(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/governance/Governance.sol:292"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:61"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "51",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/common/ReentrancyGuard.sol:18"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ReentrancyGuard",
              "src": "contracts/common/ReentrancyGuard.sol:40"
            },
            {
              "label": "governableContract",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(Governable)4389",
              "contract": "Governance",
              "src": "contracts/governance/Governance.sol:41"
            },
            {
              "label": "proposalVerifier",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IProposalVerifier)11746",
              "contract": "Governance",
              "src": "contracts/governance/Governance.sol:42"
            },
            {
              "label": "lastProposalID",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "Governance",
              "src": "contracts/governance/Governance.sol:43"
            },
            {
              "label": "activeProposals",
              "offset": 0,
              "slot": "105",
              "type": "t_uint256",
              "contract": "Governance",
              "src": "contracts/governance/Governance.sol:44"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_struct(Task)2015_storage)dyn_storage",
              "contract": "Governance",
              "src": "contracts/governance/Governance.sol:45"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_struct(ProposalState)2008_storage)",
              "contract": "Governance",
              "src": "contracts/governance/Governance.sol:47"
            },
            {
              "label": "overriddenWeight",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Governance",
              "src": "contracts/governance/Governance.sol:48"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(Vote)1995_storage)))",
              "contract": "Governance",
              "src": "contracts/governance/Governance.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Task)2015_storage)dyn_storage": {
              "label": "struct Governance.Task[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(Governable)4389": {
              "label": "contract Governable",
              "numberOfBytes": "20"
            },
            "t_contract(IProposalVerifier)11746": {
              "label": "contract IProposalVerifier",
              "numberOfBytes": "20"
            },
            "t_enum(ExecType)4345": {
              "label": "enum Proposal.ExecType",
              "members": [
                "NONE",
                "CALL",
                "DELEGATECALL"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(Vote)1995_storage)))": {
              "label": "mapping(address => mapping(address => mapping(uint256 => struct Governance.Vote)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Vote)1995_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Governance.Vote))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Option)4176_storage)": {
              "label": "mapping(uint256 => struct LRC.Option)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalState)2008_storage)": {
              "label": "mapping(uint256 => struct Governance.ProposalState)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Vote)1995_storage)": {
              "label": "mapping(uint256 => struct Governance.Vote)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Option)4176_storage": {
              "label": "struct LRC.Option",
              "members": [
                {
                  "label": "votes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "agreement",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Parameters)4364_storage": {
              "label": "struct Proposal.Parameters",
              "members": [
                {
                  "label": "pType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "executable",
                  "type": "t_enum(ExecType)4345",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minAgreement",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "opinionScales",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "proposalContract",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "options",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "deadlines",
                  "type": "t_struct(Timeline)4341_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(ProposalState)2008_storage": {
              "label": "struct Governance.ProposalState",
              "members": [
                {
                  "label": "params",
                  "type": "t_struct(Parameters)4364_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "options",
                  "type": "t_mapping(t_uint256,t_struct(Option)4176_storage)",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "winnerOptionID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "votes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Task)2015_storage": {
              "label": "struct Governance.Task",
              "members": [
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "assignment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "proposalID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Timeline)4341_storage": {
              "label": "struct Proposal.Timeline",
              "members": [
                {
                  "label": "votingStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votingMinEndTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "votingMaxEndTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Vote)1995_storage": {
              "label": "struct Governance.Vote",
              "members": [
                {
                  "label": "weight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "choices",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernanceToSFC": {
        "src": "contracts/adapters/GovernanceToSFC.sol:15",
        "version": {
          "withMetadata": "08fb64b8321067ea3b95a9716ad9dbfeed5bd02f04471ca9fc4699b3a06126b0",
          "withoutMetadata": "9d5fdc5b39c8a40823eff9ce87185a7f48a58af47c671bb8624c2279ec8c431d",
          "linkedWithoutMetadata": "9d5fdc5b39c8a40823eff9ce87185a7f48a58af47c671bb8624c2279ec8c431d"
        },
        "inherit": [
          "Ownable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "getGovernance()",
          "updateGovernanceContract(address)",
          "activeProposals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:78"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(Governance)196",
              "contract": "GovernanceToSFC",
              "src": "contracts/adapters/GovernanceToSFC.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(Governance)196": {
              "label": "contract Governance",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "RelayProxy": {
        "src": "contracts/adapters/RelayProxy.sol:5",
        "version": {
          "withMetadata": "acd54e5973cd6287d6d62fc643325a5f1ac5c816e7e000f8277ddba42f172b7c",
          "withoutMetadata": "f13c1fc665b263d696859f8429da80a89ea18aa6afdc013b8d630e77c26ebcce",
          "linkedWithoutMetadata": "f13c1fc665b263d696859f8429da80a89ea18aa6afdc013b8d630e77c26ebcce"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "__transferOwnership(address)",
          "__setDestination(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RelayProxy",
            "src": "contracts/adapters/RelayProxy.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "__destination",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "RelayProxy",
              "src": "contracts/adapters/RelayProxy.sol:6"
            },
            {
              "label": "__owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RelayProxy",
              "src": "contracts/adapters/RelayProxy.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SFC": {
        "src": "contracts/sfc/SFC.sol:24",
        "version": {
          "withMetadata": "584475d0714d274457e7cf3a1dd9bd007df228ee699e7c6a39ad9313f406728d",
          "withoutMetadata": "9edb6c9a2bc4a40004f3fec1f08c704df80d7d93845a37743051f475914601ff",
          "linkedWithoutMetadata": "9edb6c9a2bc4a40004f3fec1f08c704df80d7d93845a37743051f475914601ff"
        },
        "inherit": [
          "Version",
          "StakersConstants",
          "GovernanceToSFC",
          "Ownable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "Decimal"
        ],
        "methods": [
          "viewMaxDelegation()",
          "currentEpoch()",
          "getEpochValidatorIDs(uint256)",
          "getEpochReceivedStake(uint256,uint256)",
          "getEpochAccumulatedRewardPerToken(uint256,uint256)",
          "getEpochAccumulatedUptime(uint256,uint256)",
          "getEpochAccumulatedOriginatedTxsFee(uint256,uint256)",
          "getEpochOfflineTime(uint256,uint256)",
          "getEpochOfflineBlocks(uint256,uint256)",
          "rewardsStash(address,uint256)",
          "getLockedStake(address,uint256)",
          "minSelfStake()",
          "maxDelegatedRatio()",
          "validatorCommission()",
          "contractCommission()",
          "unlockedRewardRatio()",
          "minLockupDuration()",
          "maxLockupDuration()",
          "withdrawalPeriodEpochs()",
          "withdrawalPeriodTime()",
          "initialize(uint256,uint256,address,address,address)",
          "setGenesisValidator(address,uint256,bytes,uint256,uint256,uint256,uint256,uint256)",
          "setGenesisDelegation(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "createValidator(bytes)",
          "getSelfStake(uint256)",
          "delegate(uint256)",
          "undelegate(uint256,uint256,uint256)",
          "isSlashed(uint256)",
          "withdraw(uint256,uint256)",
          "deactivateValidator(uint256,uint256)",
          "pendingRewards(address,uint256)",
          "stashRewards(address,uint256)",
          "claimRewards(uint256)",
          "restakeRewards(uint256)",
          "_syncValidator(uint256,bool)",
          "offlinePenaltyThreshold()",
          "updateBaseRewardPerSecond(uint256)",
          "updateOfflinePenaltyThreshold(uint256,uint256)",
          "updateSlashingRefundRatio(uint256,uint256)",
          "updateStakeTokenizerAddress(address)",
          "updateTotalSupply(int256)",
          "mintFTM(address payable,uint256,string)",
          "sealEpoch(uint256[],uint256[],uint256[],uint256[])",
          "sealEpochValidators(uint256[])",
          "isLockedUp(address,uint256)",
          "getUnlockedStake(address,uint256)",
          "lockStake(uint256,uint256,uint256)",
          "relockStake(uint256,uint256,uint256)",
          "unlockStake(uint256,uint256)",
          "setMaxDelegation(uint256)",
          "setMinSelfStake(uint256)",
          "setValidatorCommission(uint256)",
          "setContractCommission(uint256)",
          "setUnlockedRewardRatio(uint256)",
          "setMinLockupDuration(uint256)",
          "setMaxLockupDuration(uint256)",
          "setWithdrawalPeriodEpoch(uint256)",
          "setWithdrawalPeriodTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:78"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(Governance)196",
              "contract": "GovernanceToSFC",
              "src": "contracts/adapters/GovernanceToSFC.sol:16"
            },
            {
              "label": "node",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(NodeDriverAuth)6147",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:40"
            },
            {
              "label": "currentSealedEpoch",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:42"
            },
            {
              "label": "getValidator",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_struct(Validator)6634_storage)",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:43"
            },
            {
              "label": "getValidatorID",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:44"
            },
            {
              "label": "getValidatorPubkey",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_bytes_storage)",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:45"
            },
            {
              "label": "lastValidatorID",
              "offset": 0,
              "slot": "108",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:47"
            },
            {
              "label": "totalStake",
              "offset": 0,
              "slot": "109",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:48"
            },
            {
              "label": "totalActiveStake",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:49"
            },
            {
              "label": "totalSlashedStake",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:50"
            },
            {
              "label": "_rewardsStash",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)6665_storage))",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:58"
            },
            {
              "label": "stashedRewardsUntilEpoch",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:60"
            },
            {
              "label": "getWithdrawalRequest",
              "offset": 0,
              "slot": "114",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)6684_storage)))",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:69"
            },
            {
              "label": "getStake",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:79"
            },
            {
              "label": "getLockupInfo",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedDelegation)6701_storage))",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:81"
            },
            {
              "label": "getStashedLockupRewards",
              "offset": 0,
              "slot": "117",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)6665_storage))",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:84"
            },
            {
              "label": "baseRewardPerSecond",
              "offset": 0,
              "slot": "118",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:104"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "119",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:105"
            },
            {
              "label": "getEpochSnapshot",
              "offset": 0,
              "slot": "120",
              "type": "t_mapping(t_uint256,t_struct(EpochSnapshot)6761_storage)",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:106"
            },
            {
              "label": "offlinePenaltyThresholdBlocksNum",
              "offset": 0,
              "slot": "121",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:108"
            },
            {
              "label": "offlinePenaltyThresholdTime",
              "offset": 0,
              "slot": "122",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:109"
            },
            {
              "label": "minStakeAmnt",
              "offset": 0,
              "slot": "123",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:111"
            },
            {
              "label": "maxDelegation",
              "offset": 0,
              "slot": "124",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:112"
            },
            {
              "label": "validatorCommissionFee",
              "offset": 0,
              "slot": "125",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:118"
            },
            {
              "label": "contractCommissionFee",
              "offset": 0,
              "slot": "126",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:119"
            },
            {
              "label": "unlockedReward",
              "offset": 0,
              "slot": "127",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:120"
            },
            {
              "label": "minLockup",
              "offset": 0,
              "slot": "128",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:121"
            },
            {
              "label": "maxLockup",
              "offset": 0,
              "slot": "129",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:122"
            },
            {
              "label": "withdrawalPeriodEpochValue",
              "offset": 0,
              "slot": "130",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:123"
            },
            {
              "label": "withdrawalPeriodTimeValue",
              "offset": 0,
              "slot": "131",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:124"
            },
            {
              "label": "slashingRefundRatio",
              "offset": 0,
              "slot": "132",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:126"
            },
            {
              "label": "stakeTokenizerAddress",
              "offset": 0,
              "slot": "133",
              "type": "t_address",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:128"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(Governance)196": {
              "label": "contract Governance",
              "numberOfBytes": "20"
            },
            "t_contract(NodeDriverAuth)6147": {
              "label": "contract NodeDriverAuth",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)6684_storage)))": {
              "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct SFC.WithdrawalRequest)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedDelegation)6701_storage))": {
              "label": "mapping(address => mapping(uint256 => struct SFC.LockedDelegation))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)6665_storage))": {
              "label": "mapping(address => mapping(uint256 => struct SFC.Rewards))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)6684_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct SFC.WithdrawalRequest))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(EpochSnapshot)6761_storage)": {
              "label": "mapping(uint256 => struct SFC.EpochSnapshot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LockedDelegation)6701_storage)": {
              "label": "mapping(uint256 => struct SFC.LockedDelegation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Rewards)6665_storage)": {
              "label": "mapping(uint256 => struct SFC.Rewards)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Validator)6634_storage)": {
              "label": "mapping(uint256 => struct SFC.Validator)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(WithdrawalRequest)6684_storage)": {
              "label": "mapping(uint256 => struct SFC.WithdrawalRequest)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EpochSnapshot)6761_storage": {
              "label": "struct SFC.EpochSnapshot",
              "members": [
                {
                  "label": "receivedStake",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accumulatedRewardPerToken",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "accumulatedUptime",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "accumulatedOriginatedTxsFee",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "offlineTime",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "offlineBlocks",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "validatorIDs",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "epochFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "totalBaseRewardWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "totalTxRewardWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "baseRewardPerSecond",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "totalStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(LockedDelegation)6701_storage": {
              "label": "struct SFC.LockedDelegation",
              "members": [
                {
                  "label": "lockedStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "fromEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Rewards)6665_storage": {
              "label": "struct SFC.Rewards",
              "members": [
                {
                  "label": "lockupExtraReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lockupBaseReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unlockedReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Validator)6634_storage": {
              "label": "struct SFC.Validator",
              "members": [
                {
                  "label": "status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "deactivatedTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "deactivatedEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "receivedStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "createdEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "createdTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "auth",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(WithdrawalRequest)6684_storage": {
              "label": "struct SFC.WithdrawalRequest",
              "members": [
                {
                  "label": "epoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "time",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SFCToGovernable": {
        "src": "contracts/adapters/SFCToGovernable.sol:19",
        "version": {
          "withMetadata": "be0c623698a6d9305984067cac13e780b862d3a3a2b5dbadc55d5f03e3fe47ab",
          "withoutMetadata": "67b1a6358e6653301bb5e85ea314821a7e367656c874e3061935bf1e69208814",
          "linkedWithoutMetadata": "67b1a6358e6653301bb5e85ea314821a7e367656c874e3061935bf1e69208814"
        },
        "inherit": [
          "Governable"
        ],
        "libraries": [],
        "methods": [
          "getTotalWeight()",
          "getReceivedWeight(address)",
          "getWeight(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "sfc",
            "src": "contracts/adapters/SFCToGovernable.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sfc",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SFC)482",
              "contract": "SFCToGovernable",
              "src": "contracts/adapters/SFCToGovernable.sol:20"
            }
          ],
          "types": {
            "t_contract(SFC)482": {
              "label": "contract SFC",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Decimal": {
        "src": "contracts/common/Decimal.sol:3",
        "version": {
          "withMetadata": "9c8ca6416b39de8040e1c9bfebf3efb817c698ec38d1bc3abc4f4ae485b85319",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GetCode": {
        "src": "contracts/common/GetCode.sol:3",
        "version": {
          "withMetadata": "5f3c14d32d6ae8284d1e690c030858053e6e941e1c0dfa8534ed1b6245e1731d",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "contracts/common/Initializable.sol:16",
        "version": {
          "withMetadata": "e6d098d26ada4584be89384c4a817e36809c7bfc8d0ae0344ff147c8ab785721",
          "withoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0",
          "linkedWithoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:61"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts/common/ReentrancyGuard.sol:16",
        "version": {
          "withMetadata": "dc911691f6daa4158db5ef8fba839623b8566bb9560e08e3b952cb6806d6cb3a",
          "withoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0",
          "linkedWithoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:61"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "51",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/common/ReentrancyGuard.sol:18"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ReentrancyGuard",
              "src": "contracts/common/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "contracts/erc20/base/ERC20.sol:31",
        "version": {
          "withMetadata": "bcbbbd9eeb958ff49899fe06d07078e535396d554ed1f0f918e66c768455bd50",
          "withoutMetadata": "59e97ea0984326e16ec095a5ffb9f3110a9e46b411a6a0d1dd7a63299cba01b7",
          "linkedWithoutMetadata": "59e97ea0984326e16ec095a5ffb9f3110a9e46b411a6a0d1dd7a63299cba01b7"
        },
        "inherit": [
          "IERC20",
          "Initializable"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:61"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/erc20/base/ERC20.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/erc20/base/ERC20.sol:36"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/erc20/base/ERC20.sol:38"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "54",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20",
              "src": "contracts/erc20/base/ERC20.sol:231"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Burnable": {
        "src": "contracts/erc20/base/ERC20Burnable.sol:10",
        "version": {
          "withMetadata": "ccb0fe7962ed44482faef57fdec20fb43fcefee66edb6cc90c6fbc7fcff61927",
          "withoutMetadata": "b747a231d956da9a91454ace147b9ff94b83fb688f6713d3f82c093c22c801c1",
          "linkedWithoutMetadata": "b747a231d956da9a91454ace147b9ff94b83fb688f6713d3f82c093c22c801c1"
        },
        "inherit": [
          "ERC20",
          "IERC20",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:61"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/erc20/base/ERC20.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/erc20/base/ERC20.sol:36"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/erc20/base/ERC20.sol:38"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "54",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20",
              "src": "contracts/erc20/base/ERC20.sol:231"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Detailed": {
        "src": "contracts/erc20/base/ERC20Detailed.sol:9",
        "inherit": [
          "IERC20",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:61"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "51",
              "type": "t_string_storage",
              "contract": "ERC20Detailed",
              "src": "contracts/erc20/base/ERC20Detailed.sol:10"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "52",
              "type": "t_string_storage",
              "contract": "ERC20Detailed",
              "src": "contracts/erc20/base/ERC20Detailed.sol:11"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "53",
              "type": "t_uint8",
              "contract": "ERC20Detailed",
              "src": "contracts/erc20/base/ERC20Detailed.sol:12"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "54",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20Detailed",
              "src": "contracts/erc20/base/ERC20Detailed.sol:56"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Mintable": {
        "src": "contracts/erc20/base/ERC20Mintable.sol:11",
        "version": {
          "withMetadata": "32a9579ba7ce3a271884883d403705dce09fbb37f42f0bed3fe7d1c263776c9e",
          "withoutMetadata": "613fd3fd60224a63354cf83b70f2f7d234f810734457b0d56840d26df057807a",
          "linkedWithoutMetadata": "613fd3fd60224a63354cf83b70f2f7d234f810734457b0d56840d26df057807a"
        },
        "inherit": [
          "MinterRole",
          "ERC20",
          "IERC20",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "mintingFinished()",
          "mint(address,uint256)",
          "finishMinting()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_mintingFinished",
            "src": "contracts/erc20/base/ERC20Mintable.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:61"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/erc20/base/ERC20.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/erc20/base/ERC20.sol:36"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/erc20/base/ERC20.sol:38"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "54",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20",
              "src": "contracts/erc20/base/ERC20.sol:231"
            },
            {
              "label": "minters",
              "offset": 0,
              "slot": "104",
              "type": "t_struct(Role)1743_storage",
              "contract": "MinterRole",
              "src": "contracts/erc20/base/MinterRole.sol:12"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "105",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MinterRole",
              "src": "contracts/erc20/base/MinterRole.sol:37"
            },
            {
              "label": "_mintingFinished",
              "offset": 0,
              "slot": "155",
              "type": "t_bool",
              "contract": "ERC20Mintable",
              "src": "contracts/erc20/base/ERC20Mintable.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Role)1743_storage": {
              "label": "struct Roles.Role",
              "members": [
                {
                  "label": "bearer",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/erc20/base/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "MinterRole": {
        "src": "contracts/erc20/base/MinterRole.sol:6",
        "version": {
          "withMetadata": "7e654e9403137823782e1bf8d332f7fa3697e4642ac1bcb5ebed6ba72336abfe",
          "withoutMetadata": "cab9b38729dc83163b4060c438577d78fbe70a8db2849772cc53f20db747145c",
          "linkedWithoutMetadata": "cab9b38729dc83163b4060c438577d78fbe70a8db2849772cc53f20db747145c"
        },
        "inherit": [],
        "libraries": [
          "Roles"
        ],
        "methods": [
          "isMinter(address)",
          "renounceMinter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "minters",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Role)1743_storage",
              "contract": "MinterRole",
              "src": "contracts/erc20/base/MinterRole.sol:12"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MinterRole",
              "src": "contracts/erc20/base/MinterRole.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Role)1743_storage": {
              "label": "struct Roles.Role",
              "members": [
                {
                  "label": "bearer",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Roles": {
        "src": "contracts/erc20/base/Roles.sol:8",
        "version": {
          "withMetadata": "b887a9b6c73d9aa991e205f5e0093a89e2a21ebb8ac2ed0c77d79bc51083919b",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Constants": {
        "src": "contracts/governance/Constants.sol:48",
        "version": {
          "withMetadata": "0caee5c5255b1439071efb080ee599064d00bfc0c0f31a06c370f100a452c015",
          "withoutMetadata": "e3c003c295bb5953d5e6c500d59e847d6999d3a7bf0ef241329a97a89b3d8861",
          "linkedWithoutMetadata": "e3c003c295bb5953d5e6c500d59e847d6999d3a7bf0ef241329a97a89b3d8861"
        },
        "inherit": [
          "StatusConstants"
        ],
        "libraries": [
          "SafeMath",
          "Decimal"
        ],
        "methods": [
          "minVotesAbsolute(uint256,uint256)",
          "bytes32ToString(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StatusConstants": {
        "src": "contracts/governance/Constants.sol:6",
        "version": {
          "withMetadata": "c8b140a36ffec1032735bc9df7849d60a351df8f1f62c61dd332011f4ce53957",
          "withoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0",
          "linkedWithoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovernanceSettings": {
        "src": "contracts/governance/GovernanceSettings.sol:12",
        "version": {
          "withMetadata": "6108bae129066a92ef2c75394f67c46d7d081a3f9ea65aea055464a86cee868b",
          "withoutMetadata": "cf9f40d6cff8718fb8b3a32bedf0671e47dcd22325ef6c0847a396588b46970e",
          "linkedWithoutMetadata": "cf9f40d6cff8718fb8b3a32bedf0671e47dcd22325ef6c0847a396588b46970e"
        },
        "inherit": [
          "Constants",
          "StatusConstants"
        ],
        "libraries": [],
        "methods": [
          "proposalFee()",
          "proposalBurntFee()",
          "taskHandlingReward()",
          "taskErasingReward()",
          "maxOptions()",
          "maxExecutionPeriod()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LRC": {
        "src": "contracts/governance/LRC.sol:9",
        "version": {
          "withMetadata": "61763bf4b1c7a94800efe4a587661f192a1c420daaecb16492bef4f21201aaaa",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Decimal"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Proposal": {
        "src": "contracts/governance/Proposal.sol:5",
        "version": {
          "withMetadata": "c28b09640a757bea2a7b37965cb6545a484a35d79f7c50f81f13f4ef4af1a5b0",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Governable": {
        "src": "contracts/model/Governable.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTotalWeight()",
          "getReceivedWeight(address)",
          "getWeight(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/ownership/Ownable.sol:14",
        "version": {
          "withMetadata": "895e9b2826da6f4f28b957150743685da26fcb0a082e749659f0ff839c2af741",
          "withoutMetadata": "9a175aae8b6ce193ed673d711cb1359bca74ca946ba8fa8a8e0b82a894149dfb",
          "linkedWithoutMetadata": "9a175aae8b6ce193ed673d711cb1359bca74ca946ba8fa8a8e0b82a894149dfb"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:78"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NetworkParameterProposal": {
        "src": "contracts/proposal/NetworkParameterProposal.sol:13",
        "version": {
          "withMetadata": "73bb82879e570c0740e0bbf69aa4a8f979fc4afbdc3fae7778c7abfa36b59948",
          "withoutMetadata": "73bb82879e570c0740e0bbf69aa4a8f979fc4afbdc3fae7778c7abfa36b59948",
          "linkedWithoutMetadata": "73bb82879e570c0740e0bbf69aa4a8f979fc4afbdc3fae7778c7abfa36b59948"
        },
        "inherit": [
          "Cancelable",
          "Ownable",
          "Initializable",
          "DelegatecallExecutableProposal",
          "BaseProposal",
          "IProposal"
        ],
        "libraries": [],
        "methods": [
          "(string,string,bytes32[],uint256,uint256,uint256,uint256,uint256,address,address)",
          "execute_delegatecall(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NetworkParameterProposal",
            "src": "contracts/proposal/NetworkParameterProposal.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:24"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "61",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:78"
            },
            {
              "label": "sfc",
              "offset": 0,
              "slot": "111",
              "type": "t_address",
              "contract": "NetworkParameterProposal",
              "src": "contracts/proposal/NetworkParameterProposal.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PlainTextProposal": {
        "src": "contracts/proposal/PlainTextProposal.sol:9",
        "version": {
          "withMetadata": "12469f2d91895f4202733b6c2f780b98e90a47080d67bae80d251c0cc5b49daf",
          "withoutMetadata": "12469f2d91895f4202733b6c2f780b98e90a47080d67bae80d251c0cc5b49daf",
          "linkedWithoutMetadata": "12469f2d91895f4202733b6c2f780b98e90a47080d67bae80d251c0cc5b49daf"
        },
        "inherit": [
          "Cancelable",
          "Ownable",
          "Initializable",
          "NonExecutableProposal",
          "BaseProposal",
          "IProposal"
        ],
        "libraries": [],
        "methods": [
          "(string,string,bytes32[],uint256,uint256,uint256,uint256,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PlainTextProposal",
            "src": "contracts/proposal/PlainTextProposal.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:24"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "61",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:78"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoftwareUpgradeProposal": {
        "src": "contracts/proposal/SoftwareUpgradeProposal.sol:10",
        "version": {
          "withMetadata": "9cd33ca8ea4b9b54f0e8a8115143d2b65b361bffe0452bb9806c7bdd60120c6d",
          "withoutMetadata": "9cd33ca8ea4b9b54f0e8a8115143d2b65b361bffe0452bb9806c7bdd60120c6d",
          "linkedWithoutMetadata": "9cd33ca8ea4b9b54f0e8a8115143d2b65b361bffe0452bb9806c7bdd60120c6d"
        },
        "inherit": [
          "Cancelable",
          "Ownable",
          "Initializable",
          "DelegatecallExecutableProposal",
          "BaseProposal",
          "IProposal"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,uint256,uint256,uint256,uint256,address,address,address)",
          "execute_delegatecall(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoftwareUpgradeProposal",
            "src": "contracts/proposal/SoftwareUpgradeProposal.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:24"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "61",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:78"
            },
            {
              "label": "upgradeableContract",
              "offset": 0,
              "slot": "111",
              "type": "t_address",
              "contract": "SoftwareUpgradeProposal",
              "src": "contracts/proposal/SoftwareUpgradeProposal.sol:11"
            },
            {
              "label": "newImplementation",
              "offset": 0,
              "slot": "112",
              "type": "t_address",
              "contract": "SoftwareUpgradeProposal",
              "src": "contracts/proposal/SoftwareUpgradeProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BaseProposal": {
        "src": "contracts/proposal/base/BaseProposal.sol:11",
        "version": {
          "withMetadata": "1d136faf9ceed81499820e24a7a04f6f638322bec83d13edf4407da11380b5bd",
          "withoutMetadata": "3ad110707e6647407ac4ee60071b1c5cc55ffeace426dd404feb8f9ae01061fc",
          "linkedWithoutMetadata": "3ad110707e6647407ac4ee60071b1c5cc55ffeace426dd404feb8f9ae01061fc"
        },
        "inherit": [
          "IProposal"
        ],
        "libraries": [
          "SafeMath",
          "Proposal"
        ],
        "methods": [
          "verifyProposalParams(address)",
          "pType()",
          "executable()",
          "minVotes()",
          "minAgreement()",
          "opinionScales()",
          "options()",
          "votingStartTime()",
          "votingMinEndTime()",
          "votingMaxEndTime()",
          "name()",
          "description()",
          "execute_delegatecall(address,uint256)",
          "execute_call(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:24"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CallExecutableProposal": {
        "src": "contracts/proposal/base/CallExecutableProposal.sol:6",
        "version": {
          "withMetadata": "098e96bf72ebf29199cd8449e24b2b68a08362ebb6c3fe0b52ccaaf888fec741",
          "withoutMetadata": "cceb9443c5f5a12ceba8ae64c2ad531e8f4368eb45ef0fe9169816df64aabb2f",
          "linkedWithoutMetadata": "cceb9443c5f5a12ceba8ae64c2ad531e8f4368eb45ef0fe9169816df64aabb2f"
        },
        "inherit": [
          "BaseProposal",
          "IProposal"
        ],
        "libraries": [
          "Proposal"
        ],
        "methods": [
          "executable()",
          "pType()",
          "execute_call(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:24"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Cancelable": {
        "src": "contracts/proposal/base/Cancelable.sol:6",
        "version": {
          "withMetadata": "b14368835cd63a77a587f6f407b0a496d6b11ee27214dd9147613679f5dc9cbe",
          "withoutMetadata": "b14368835cd63a77a587f6f407b0a496d6b11ee27214dd9147613679f5dc9cbe",
          "linkedWithoutMetadata": "b14368835cd63a77a587f6f407b0a496d6b11ee27214dd9147613679f5dc9cbe"
        },
        "inherit": [
          "Ownable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "cancel(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Cancelable",
            "src": "contracts/proposal/base/Cancelable.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:78"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DelegatecallExecutableProposal": {
        "src": "contracts/proposal/base/DelegatecallExecutableProposal.sol:6",
        "version": {
          "withMetadata": "4ab51df96753d43423498d0117eacddbdcd8da538fa711355b01a1174ea04370",
          "withoutMetadata": "ba352828d3a480b2e58077a65031dffe1b68def957f49e5cab9d3319a3b164a3",
          "linkedWithoutMetadata": "ba352828d3a480b2e58077a65031dffe1b68def957f49e5cab9d3319a3b164a3"
        },
        "inherit": [
          "BaseProposal",
          "IProposal"
        ],
        "libraries": [
          "Proposal"
        ],
        "methods": [
          "executable()",
          "pType()",
          "execute_delegatecall(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:24"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IProposal": {
        "src": "contracts/proposal/base/IProposal.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "pType()",
          "executable()",
          "minVotes()",
          "minAgreement()",
          "opinionScales()",
          "options()",
          "votingStartTime()",
          "votingMinEndTime()",
          "votingMaxEndTime()",
          "execute_call(uint256)",
          "execute_delegatecall(address,uint256)",
          "name()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NonExecutableProposal": {
        "src": "contracts/proposal/base/NonExecutableProposal.sol:6",
        "version": {
          "withMetadata": "79c3137762813fc0d18f0a8a91b9b8d6b8cd94d08402243fc2311b968e2612d7",
          "withoutMetadata": "6322dc033bd491432bf10bf111fe38a5504260604942e4573252f4e21d19f91f",
          "linkedWithoutMetadata": "6322dc033bd491432bf10bf111fe38a5504260604942e4573252f4e21d19f91f"
        },
        "inherit": [
          "BaseProposal",
          "IProposal"
        ],
        "libraries": [
          "Proposal"
        ],
        "methods": [
          "pType()",
          "executable()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:24"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AlteredPlainTextProposal": {
        "src": "contracts/proposal/test/AlteredPlainTextProposal.sol:5",
        "version": {
          "withMetadata": "8656207474ee5640b17ce3bd3a0aba678e29b128cd68fa9090ffd5a7551f2042",
          "withoutMetadata": "8656207474ee5640b17ce3bd3a0aba678e29b128cd68fa9090ffd5a7551f2042",
          "linkedWithoutMetadata": "8656207474ee5640b17ce3bd3a0aba678e29b128cd68fa9090ffd5a7551f2042"
        },
        "inherit": [
          "PlainTextProposal",
          "Cancelable",
          "Ownable",
          "Initializable",
          "NonExecutableProposal",
          "BaseProposal",
          "IProposal"
        ],
        "libraries": [],
        "methods": [
          "(string,string,bytes32[],uint256,uint256,uint256,uint256,uint256,address)",
          "name()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AlteredPlainTextProposal",
            "src": "contracts/proposal/test/AlteredPlainTextProposal.sol:6"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:24"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "61",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:78"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ExecLoggingProposal": {
        "src": "contracts/proposal/test/ExecLoggingProposal.sol:7",
        "version": {
          "withMetadata": "a5386122abe81c667abb885d1ac0b4b0d8fa5bdbf6299ca2c808f1714cfc795d",
          "withoutMetadata": "a5386122abe81c667abb885d1ac0b4b0d8fa5bdbf6299ca2c808f1714cfc795d",
          "linkedWithoutMetadata": "a5386122abe81c667abb885d1ac0b4b0d8fa5bdbf6299ca2c808f1714cfc795d"
        },
        "inherit": [
          "NetworkParameterProposal",
          "Cancelable",
          "Ownable",
          "Initializable",
          "DelegatecallExecutableProposal",
          "BaseProposal",
          "IProposal"
        ],
        "libraries": [],
        "methods": [
          "(string,string,bytes32[],uint256,uint256,uint256,uint256,uint256,address,address)",
          "setOpinionScales(uint256[])",
          "pType()",
          "executable()",
          "setExecutable(uint8)",
          "cancel(uint256,address)",
          "executeNonDelegateCall(address,address,uint256)",
          "execute_call(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ExecLoggingProposal",
            "src": "contracts/proposal/test/ExecLoggingProposal.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:24"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "61",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:78"
            },
            {
              "label": "sfc",
              "offset": 0,
              "slot": "111",
              "type": "t_address",
              "contract": "NetworkParameterProposal",
              "src": "contracts/proposal/NetworkParameterProposal.sol:14"
            },
            {
              "label": "_exec",
              "offset": 20,
              "slot": "111",
              "type": "t_enum(ExecType)4345",
              "contract": "ExecLoggingProposal",
              "src": "contracts/proposal/test/ExecLoggingProposal.sol:8"
            },
            {
              "label": "executedCounter",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "ExecLoggingProposal",
              "src": "contracts/proposal/test/ExecLoggingProposal.sol:34"
            },
            {
              "label": "executedMsgSender",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "ExecLoggingProposal",
              "src": "contracts/proposal/test/ExecLoggingProposal.sol:35"
            },
            {
              "label": "executedAs",
              "offset": 0,
              "slot": "114",
              "type": "t_address",
              "contract": "ExecLoggingProposal",
              "src": "contracts/proposal/test/ExecLoggingProposal.sol:36"
            },
            {
              "label": "executedOption",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "ExecLoggingProposal",
              "src": "contracts/proposal/test/ExecLoggingProposal.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ExecType)4345": {
              "label": "enum Proposal.ExecType",
              "members": [
                "NONE",
                "CALL",
                "DELEGATECALL"
              ],
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ExplicitProposal": {
        "src": "contracts/proposal/test/ExplicitProposal.sol:5",
        "version": {
          "withMetadata": "4c3748984e01a5fc5a4ef14d561e60cd0e41b2be3d6039135977a80289b79143",
          "withoutMetadata": "ba89465663e66e8cf52bf07fe5cd9806e682a38a0fb1ff21658d03eb570b98ac",
          "linkedWithoutMetadata": "ba89465663e66e8cf52bf07fe5cd9806e682a38a0fb1ff21658d03eb570b98ac"
        },
        "inherit": [
          "BaseProposal",
          "IProposal"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "setType(uint256)",
          "setMinVotes(uint256)",
          "setMinAgreement(uint256)",
          "setOpinionScales(uint256[])",
          "setVotingStartTime(uint256)",
          "setVotingMinEndTime(uint256)",
          "setVotingMaxEndTime(uint256)",
          "setExecutable(uint8)",
          "setOptions(bytes32[])",
          "setName(string)",
          "setDescription(string)",
          "pType()",
          "executable()",
          "votingStartTime()",
          "votingMinEndTime()",
          "votingMaxEndTime()",
          "execute_delegatecall(address,uint256)",
          "execute_call(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts/proposal/base/BaseProposal.sol:24"
            },
            {
              "label": "_pType",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ExplicitProposal",
              "src": "contracts/proposal/test/ExplicitProposal.sol:8"
            },
            {
              "label": "_exec",
              "offset": 0,
              "slot": "10",
              "type": "t_enum(ExecType)4345",
              "contract": "ExplicitProposal",
              "src": "contracts/proposal/test/ExplicitProposal.sol:9"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ExecType)4345": {
              "label": "enum Proposal.ExecType",
              "members": [
                "NONE",
                "CALL",
                "DELEGATECALL"
              ],
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NetworkInitializer": {
        "src": "contracts/sfc/NetworkInitializer.sol:6",
        "version": {
          "withMetadata": "395e1449d1f1d34c76a9705a038f777d14e1474fb1f2b174dff21034dff13a77",
          "withoutMetadata": "0a11995cd2343965b83c08360179ef595f8a694b3ec3b58e82f150fec0ccf747",
          "linkedWithoutMetadata": "0a11995cd2343965b83c08360179ef595f8a694b3ec3b58e82f150fec0ccf747"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initializeAll(uint256,uint256,address,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "selfdestruct",
            "src": "contracts/sfc/NetworkInitializer.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EVMWriter": {
        "src": "contracts/sfc/NodeDriver.sol:199",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setBalance(address,uint256)",
          "copyCode(address,address)",
          "swapCode(address,address)",
          "setStorage(address,bytes32,bytes32)",
          "incNonce(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NodeDriver": {
        "src": "contracts/sfc/NodeDriver.sol:101",
        "version": {
          "withMetadata": "3574ceca20099b4ae9fad173abd2630528d8e8a8ee9d4944031980e9fccd9f49",
          "withoutMetadata": "c134281afc10a259ce8648962f5458252c3732ded76b4a64004c707149b52038",
          "linkedWithoutMetadata": "c134281afc10a259ce8648962f5458252c3732ded76b4a64004c707149b52038"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setBackend(address)",
          "initialize(address,address)",
          "setBalance(address,uint256)",
          "copyCode(address,address)",
          "swapCode(address,address)",
          "setStorage(address,bytes32,bytes32)",
          "incNonce(address,uint256)",
          "updateNetworkRules(bytes)",
          "updateNetworkVersion(uint256)",
          "advanceEpochs(uint256)",
          "updateValidatorWeight(uint256,uint256)",
          "updateValidatorPubkey(uint256,bytes)",
          "setGenesisValidator(address,uint256,bytes,uint256,uint256,uint256,uint256,uint256)",
          "setGenesisDelegation(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "deactivateValidator(uint256,uint256)",
          "sealEpochValidators(uint256[])",
          "sealEpoch(uint256[],uint256[],uint256[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:61"
            },
            {
              "label": "sfc",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(SFC)11084",
              "contract": "NodeDriver",
              "src": "contracts/sfc/NodeDriver.sol:102"
            },
            {
              "label": "backend",
              "offset": 0,
              "slot": "52",
              "type": "t_contract(NodeDriver)6542",
              "contract": "NodeDriver",
              "src": "contracts/sfc/NodeDriver.sol:103"
            },
            {
              "label": "evmWriter",
              "offset": 0,
              "slot": "53",
              "type": "t_contract(EVMWriter)6580",
              "contract": "NodeDriver",
              "src": "contracts/sfc/NodeDriver.sol:104"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(EVMWriter)6580": {
              "label": "contract EVMWriter",
              "numberOfBytes": "20"
            },
            "t_contract(NodeDriver)6542": {
              "label": "contract NodeDriver",
              "numberOfBytes": "20"
            },
            "t_contract(SFC)11084": {
              "label": "contract SFC",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NodeDriverAuth": {
        "src": "contracts/sfc/NodeDriver.sol:8",
        "version": {
          "withMetadata": "14da03e2a12c8e922dd7c864a646cd584b8131b32729f31fefd9d75168df4fa7",
          "withoutMetadata": "1ca166c3151d8a4c633feddc8677b8dc574498eb84ee56374b63b1a5f97838e4",
          "linkedWithoutMetadata": "1ca166c3151d8a4c633feddc8677b8dc574498eb84ee56374b63b1a5f97838e4"
        },
        "inherit": [
          "Ownable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "initialize(address,address,address)",
          "migrateTo(address)",
          "incBalance(address,uint256)",
          "upgradeCode(address,address)",
          "copyCode(address,address)",
          "incNonce(address,uint256)",
          "updateNetworkRules(bytes)",
          "updateNetworkVersion(uint256)",
          "advanceEpochs(uint256)",
          "updateValidatorWeight(uint256,uint256)",
          "updateValidatorPubkey(uint256,bytes)",
          "setGenesisValidator(address,uint256,bytes,uint256,uint256,uint256,uint256,uint256)",
          "setGenesisDelegation(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "deactivateValidator(uint256,uint256)",
          "sealEpochValidators(uint256[])",
          "sealEpoch(uint256[],uint256[],uint256[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:78"
            },
            {
              "label": "sfc",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(SFC)11084",
              "contract": "NodeDriverAuth",
              "src": "contracts/sfc/NodeDriver.sol:11"
            },
            {
              "label": "driver",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(NodeDriver)6542",
              "contract": "NodeDriverAuth",
              "src": "contracts/sfc/NodeDriver.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(NodeDriver)6542": {
              "label": "contract NodeDriver",
              "numberOfBytes": "20"
            },
            "t_contract(SFC)11084": {
              "label": "contract SFC",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IGovernanceToSFC": {
        "src": "contracts/sfc/SFC.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getGovernance()",
          "activeProposals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IOwnable": {
        "src": "contracts/sfc/SFC.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Spacer": {
        "src": "contracts/sfc/StakeTokenizer.sol:8",
        "version": {
          "withMetadata": "bccf2635f950ee666693643d5031000cb913011e742eb28eb563262aea40061c",
          "withoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0",
          "linkedWithoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Spacer",
              "src": "contracts/sfc/StakeTokenizer.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StakeTokenizer": {
        "src": "contracts/sfc/StakeTokenizer.sol:12",
        "version": {
          "withMetadata": "1bcbe393c612e217f0f077c813ad977292ec95143bf3884393d8ea3f2ca4a070",
          "withoutMetadata": "4be2a8e7fdfec41a2d963b80feb88ad15d6f7e0c80fbc37fbc1206f234ad277a",
          "linkedWithoutMetadata": "4be2a8e7fdfec41a2d963b80feb88ad15d6f7e0c80fbc37fbc1206f234ad277a"
        },
        "inherit": [
          "Initializable",
          "Spacer"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "mintSFTM(uint256)",
          "redeemSFTM(uint256,uint256)",
          "allowedToWithdrawStake(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Spacer",
              "src": "contracts/sfc/StakeTokenizer.sol:9"
            },
            {
              "label": "initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:61"
            },
            {
              "label": "sfc",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(SFC)11084",
              "contract": "StakeTokenizer",
              "src": "contracts/sfc/StakeTokenizer.sol:13"
            },
            {
              "label": "outstandingSFTM",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "StakeTokenizer",
              "src": "contracts/sfc/StakeTokenizer.sol:15"
            },
            {
              "label": "sFTMTokenAddress",
              "offset": 0,
              "slot": "53",
              "type": "t_address",
              "contract": "StakeTokenizer",
              "src": "contracts/sfc/StakeTokenizer.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SFC)11084": {
              "label": "contract SFC",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StakersConstants": {
        "src": "contracts/sfc/StakerConstants.sol:6",
        "version": {
          "withMetadata": "f5b7a8c11c25e02f11cf367b70244d85bff6e950c65412a216957520e168c603",
          "withoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0",
          "linkedWithoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StubEvmWriter": {
        "src": "contracts/test/StubEvmWriter.sol:5",
        "version": {
          "withMetadata": "e047186c809f77246a7059185d14c0032de4205b874e46f1503633f90831944c",
          "withoutMetadata": "80c4a61a540894d8188cd82226c2a766302c2297a62b5ee26e1fa5514e84d25c",
          "linkedWithoutMetadata": "80c4a61a540894d8188cd82226c2a766302c2297a62b5ee26e1fa5514e84d25c"
        },
        "inherit": [
          "EVMWriter"
        ],
        "libraries": [],
        "methods": [
          "setBalance(address,uint256)",
          "copyCode(address,address)",
          "swapCode(address,address)",
          "setStorage(address,bytes32,bytes32)",
          "incNonce(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UnitTestGovernable": {
        "src": "contracts/test/UnitTestGovernable.sol:5",
        "version": {
          "withMetadata": "71517818a06b31b4ab6eaffdfb1f5d68dfd5dc95aef0f0f8e5d7a2ebc001c035",
          "withoutMetadata": "d24b4c23f8ddc483bd5deb6dbc4620bc06aea77bcad30f9d83a877ae193a4412",
          "linkedWithoutMetadata": "d24b4c23f8ddc483bd5deb6dbc4620bc06aea77bcad30f9d83a877ae193a4412"
        },
        "inherit": [
          "Governable"
        ],
        "libraries": [],
        "methods": [
          "stake(address,uint256)",
          "unstake(address,uint256)",
          "getTotalWeight()",
          "getReceivedWeight(address)",
          "getWeight(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "delegations",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnitTestGovernable",
              "src": "contracts/test/UnitTestGovernable.sol:6"
            },
            {
              "label": "rcvDelegations",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnitTestGovernable",
              "src": "contracts/test/UnitTestGovernable.sol:7"
            },
            {
              "label": "totalStake",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnitTestGovernable",
              "src": "contracts/test/UnitTestGovernable.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnitTestGovernance": {
        "src": "contracts/test/UnitTestGovernance.sol:5",
        "version": {
          "withMetadata": "f7ce317323d7c74a0bf3af58213d62909b3b1df88e93f5e666624a01349f63a0",
          "withoutMetadata": "c54faaf984e705005b052ef8cdaf124e6c91d7d3f3f7c661044c0286d2fc6c41",
          "linkedWithoutMetadata": "c54faaf984e705005b052ef8cdaf124e6c91d7d3f3f7c661044c0286d2fc6c41"
        },
        "inherit": [
          "Governance",
          "Version",
          "GovernanceSettings",
          "Constants",
          "StatusConstants",
          "ReentrancyGuard",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proposalFee()",
          "proposalBurntFee()",
          "taskHandlingReward()",
          "taskErasingReward()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:61"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "51",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/common/ReentrancyGuard.sol:18"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ReentrancyGuard",
              "src": "contracts/common/ReentrancyGuard.sol:40"
            },
            {
              "label": "governableContract",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(Governable)4389",
              "contract": "Governance",
              "src": "contracts/governance/Governance.sol:41"
            },
            {
              "label": "proposalVerifier",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IProposalVerifier)11746",
              "contract": "Governance",
              "src": "contracts/governance/Governance.sol:42"
            },
            {
              "label": "lastProposalID",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "Governance",
              "src": "contracts/governance/Governance.sol:43"
            },
            {
              "label": "activeProposals",
              "offset": 0,
              "slot": "105",
              "type": "t_uint256",
              "contract": "Governance",
              "src": "contracts/governance/Governance.sol:44"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_struct(Task)2015_storage)dyn_storage",
              "contract": "Governance",
              "src": "contracts/governance/Governance.sol:45"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_struct(ProposalState)2008_storage)",
              "contract": "Governance",
              "src": "contracts/governance/Governance.sol:47"
            },
            {
              "label": "overriddenWeight",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Governance",
              "src": "contracts/governance/Governance.sol:48"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(Vote)1995_storage)))",
              "contract": "Governance",
              "src": "contracts/governance/Governance.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Task)2015_storage)dyn_storage": {
              "label": "struct Governance.Task[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(Governable)4389": {
              "label": "contract Governable",
              "numberOfBytes": "20"
            },
            "t_contract(IProposalVerifier)11746": {
              "label": "contract IProposalVerifier",
              "numberOfBytes": "20"
            },
            "t_enum(ExecType)4345": {
              "label": "enum Proposal.ExecType",
              "members": [
                "NONE",
                "CALL",
                "DELEGATECALL"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(Vote)1995_storage)))": {
              "label": "mapping(address => mapping(address => mapping(uint256 => struct Governance.Vote)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Vote)1995_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Governance.Vote))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Option)4176_storage)": {
              "label": "mapping(uint256 => struct LRC.Option)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalState)2008_storage)": {
              "label": "mapping(uint256 => struct Governance.ProposalState)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Vote)1995_storage)": {
              "label": "mapping(uint256 => struct Governance.Vote)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Option)4176_storage": {
              "label": "struct LRC.Option",
              "members": [
                {
                  "label": "votes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "agreement",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Parameters)4364_storage": {
              "label": "struct Proposal.Parameters",
              "members": [
                {
                  "label": "pType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "executable",
                  "type": "t_enum(ExecType)4345",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minAgreement",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "opinionScales",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "proposalContract",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "options",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "deadlines",
                  "type": "t_struct(Timeline)4341_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(ProposalState)2008_storage": {
              "label": "struct Governance.ProposalState",
              "members": [
                {
                  "label": "params",
                  "type": "t_struct(Parameters)4364_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "options",
                  "type": "t_mapping(t_uint256,t_struct(Option)4176_storage)",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "winnerOptionID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "votes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Task)2015_storage": {
              "label": "struct Governance.Task",
              "members": [
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "assignment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "proposalID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Timeline)4341_storage": {
              "label": "struct Proposal.Timeline",
              "members": [
                {
                  "label": "votingStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votingMinEndTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "votingMaxEndTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Vote)1995_storage": {
              "label": "struct Governance.Vote",
              "members": [
                {
                  "label": "weight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "choices",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnitTestSFC": {
        "src": "contracts/test/UnitTestSFC.sol:5",
        "version": {
          "withMetadata": "fd6ff1996a9bd55d6922d76e8ecb5606f9264901dc28d8143a3a4c0cfefbbdef",
          "withoutMetadata": "42b348f79dce48ae4719c5468bbe7dcea564f2d9b79c0dfbb904ccf2e2bc22f9",
          "linkedWithoutMetadata": "42b348f79dce48ae4719c5468bbe7dcea564f2d9b79c0dfbb904ccf2e2bc22f9"
        },
        "inherit": [
          "SFC",
          "Version",
          "StakersConstants",
          "GovernanceToSFC",
          "Ownable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "minSelfStake()",
          "rebaseTime()",
          "advanceTime(uint256)",
          "getTime()",
          "getBlockTime()",
          "highestLockupEpoch(address,uint256)",
          "enableNonNodeCalls()",
          "disableNonNodeCalls()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:78"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(Governance)196",
              "contract": "GovernanceToSFC",
              "src": "contracts/adapters/GovernanceToSFC.sol:16"
            },
            {
              "label": "node",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(NodeDriverAuth)6147",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:40"
            },
            {
              "label": "currentSealedEpoch",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:42"
            },
            {
              "label": "getValidator",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_struct(Validator)6634_storage)",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:43"
            },
            {
              "label": "getValidatorID",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:44"
            },
            {
              "label": "getValidatorPubkey",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_bytes_storage)",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:45"
            },
            {
              "label": "lastValidatorID",
              "offset": 0,
              "slot": "108",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:47"
            },
            {
              "label": "totalStake",
              "offset": 0,
              "slot": "109",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:48"
            },
            {
              "label": "totalActiveStake",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:49"
            },
            {
              "label": "totalSlashedStake",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:50"
            },
            {
              "label": "_rewardsStash",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)6665_storage))",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:58"
            },
            {
              "label": "stashedRewardsUntilEpoch",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:60"
            },
            {
              "label": "getWithdrawalRequest",
              "offset": 0,
              "slot": "114",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)6684_storage)))",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:69"
            },
            {
              "label": "getStake",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:79"
            },
            {
              "label": "getLockupInfo",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedDelegation)6701_storage))",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:81"
            },
            {
              "label": "getStashedLockupRewards",
              "offset": 0,
              "slot": "117",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)6665_storage))",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:84"
            },
            {
              "label": "baseRewardPerSecond",
              "offset": 0,
              "slot": "118",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:104"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "119",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:105"
            },
            {
              "label": "getEpochSnapshot",
              "offset": 0,
              "slot": "120",
              "type": "t_mapping(t_uint256,t_struct(EpochSnapshot)6761_storage)",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:106"
            },
            {
              "label": "offlinePenaltyThresholdBlocksNum",
              "offset": 0,
              "slot": "121",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:108"
            },
            {
              "label": "offlinePenaltyThresholdTime",
              "offset": 0,
              "slot": "122",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:109"
            },
            {
              "label": "minStakeAmnt",
              "offset": 0,
              "slot": "123",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:111"
            },
            {
              "label": "maxDelegation",
              "offset": 0,
              "slot": "124",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:112"
            },
            {
              "label": "validatorCommissionFee",
              "offset": 0,
              "slot": "125",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:118"
            },
            {
              "label": "contractCommissionFee",
              "offset": 0,
              "slot": "126",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:119"
            },
            {
              "label": "unlockedReward",
              "offset": 0,
              "slot": "127",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:120"
            },
            {
              "label": "minLockup",
              "offset": 0,
              "slot": "128",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:121"
            },
            {
              "label": "maxLockup",
              "offset": 0,
              "slot": "129",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:122"
            },
            {
              "label": "withdrawalPeriodEpochValue",
              "offset": 0,
              "slot": "130",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:123"
            },
            {
              "label": "withdrawalPeriodTimeValue",
              "offset": 0,
              "slot": "131",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:124"
            },
            {
              "label": "slashingRefundRatio",
              "offset": 0,
              "slot": "132",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:126"
            },
            {
              "label": "stakeTokenizerAddress",
              "offset": 0,
              "slot": "133",
              "type": "t_address",
              "contract": "SFC",
              "src": "contracts/sfc/SFC.sol:128"
            },
            {
              "label": "time",
              "offset": 0,
              "slot": "134",
              "type": "t_uint256",
              "contract": "UnitTestSFC",
              "src": "contracts/test/UnitTestSFC.sol:12"
            },
            {
              "label": "allowedNonNodeCalls",
              "offset": 0,
              "slot": "135",
              "type": "t_bool",
              "contract": "UnitTestSFC",
              "src": "contracts/test/UnitTestSFC.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(Governance)196": {
              "label": "contract Governance",
              "numberOfBytes": "20"
            },
            "t_contract(NodeDriverAuth)6147": {
              "label": "contract NodeDriverAuth",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)6684_storage)))": {
              "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct SFC.WithdrawalRequest)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedDelegation)6701_storage))": {
              "label": "mapping(address => mapping(uint256 => struct SFC.LockedDelegation))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)6665_storage))": {
              "label": "mapping(address => mapping(uint256 => struct SFC.Rewards))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)6684_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct SFC.WithdrawalRequest))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(EpochSnapshot)6761_storage)": {
              "label": "mapping(uint256 => struct SFC.EpochSnapshot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LockedDelegation)6701_storage)": {
              "label": "mapping(uint256 => struct SFC.LockedDelegation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Rewards)6665_storage)": {
              "label": "mapping(uint256 => struct SFC.Rewards)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Validator)6634_storage)": {
              "label": "mapping(uint256 => struct SFC.Validator)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(WithdrawalRequest)6684_storage)": {
              "label": "mapping(uint256 => struct SFC.WithdrawalRequest)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EpochSnapshot)6761_storage": {
              "label": "struct SFC.EpochSnapshot",
              "members": [
                {
                  "label": "receivedStake",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accumulatedRewardPerToken",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "accumulatedUptime",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "accumulatedOriginatedTxsFee",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "offlineTime",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "offlineBlocks",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "validatorIDs",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "epochFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "totalBaseRewardWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "totalTxRewardWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "baseRewardPerSecond",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "totalStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(LockedDelegation)6701_storage": {
              "label": "struct SFC.LockedDelegation",
              "members": [
                {
                  "label": "lockedStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "fromEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Rewards)6665_storage": {
              "label": "struct SFC.Rewards",
              "members": [
                {
                  "label": "lockupExtraReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lockupBaseReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unlockedReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Validator)6634_storage": {
              "label": "struct SFC.Validator",
              "members": [
                {
                  "label": "status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "deactivatedTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "deactivatedEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "receivedStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "createdEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "createdTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "auth",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(WithdrawalRequest)6684_storage": {
              "label": "struct SFC.WithdrawalRequest",
              "members": [
                {
                  "label": "epoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "time",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Upgradability": {
        "src": "contracts/upgrade/Upgradability.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BytecodeMatcher": {
        "src": "contracts/verifiers/BytecodeMatcher.sol:8",
        "version": {
          "withMetadata": "e807451c8ba770597c83a1b6ef1993326814c17314f02397ce8dce248523b450",
          "withoutMetadata": "a1219555945207fc3bb6f382e47f60693f5703cfb553134fd3417e95d59b92d8",
          "linkedWithoutMetadata": "a1219555945207fc3bb6f382e47f60693f5703cfb553134fd3417e95d59b92d8"
        },
        "inherit": [
          "Initializable",
          "IProposalVerifier"
        ],
        "libraries": [
          "GetCode"
        ],
        "methods": [
          "initialize(address)",
          "verifyProposalParams(uint256,uint8,uint256,uint256,uint256[],uint256,uint256,uint256)",
          "verifyProposalContract(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:61"
            },
            {
              "label": "codeSample",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "BytecodeMatcher",
              "src": "contracts/verifiers/BytecodeMatcher.sol:11"
            },
            {
              "label": "codeHash",
              "offset": 0,
              "slot": "52",
              "type": "t_bytes32",
              "contract": "BytecodeMatcher",
              "src": "contracts/verifiers/BytecodeMatcher.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IProposalVerifier": {
        "src": "contracts/verifiers/IProposalVerifier.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProposalParams(uint256,uint8,uint256,uint256,uint256[],uint256,uint256,uint256)",
          "verifyProposalContract(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableVerifier": {
        "src": "contracts/verifiers/OwnableVerifier.sol:8",
        "version": {
          "withMetadata": "e6e0d6121638e2ed8f92c644b6fc7795b17b9a4f06c6c4ea6150dcd59b9019ad",
          "withoutMetadata": "e6e0d6121638e2ed8f92c644b6fc7795b17b9a4f06c6c4ea6150dcd59b9019ad",
          "linkedWithoutMetadata": "e6e0d6121638e2ed8f92c644b6fc7795b17b9a4f06c6c4ea6150dcd59b9019ad"
        },
        "inherit": [
          "Ownable",
          "Initializable",
          "IProposalVerifier"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "createProposal(address)",
          "verifyProposalParams(uint256,uint8,uint256,uint256,uint256[],uint256,uint256,uint256)",
          "verifyProposalContract(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OwnableVerifier",
            "src": "contracts/verifiers/OwnableVerifier.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:78"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(Governance)4078",
              "contract": "OwnableVerifier",
              "src": "contracts/verifiers/OwnableVerifier.sol:14"
            },
            {
              "label": "unlockedFor",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "OwnableVerifier",
              "src": "contracts/verifiers/OwnableVerifier.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(Governance)4078": {
              "label": "contract Governance",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ProposalTemplates": {
        "src": "contracts/verifiers/ProposalTemplates.sol:15",
        "version": {
          "withMetadata": "d98ea5605c7594c6df592dc4a0a537b5ec52c723d1328e698f6283bcf6aa12a2",
          "withoutMetadata": "bb98c59a16995b0a925817c9633079a2c378fef8f221ed124c2b7ed20b283fac",
          "linkedWithoutMetadata": "bb98c59a16995b0a925817c9633079a2c378fef8f221ed124c2b7ed20b283fac"
        },
        "inherit": [
          "Version",
          "Ownable",
          "IProposalVerifier",
          "Initializable"
        ],
        "libraries": [
          "Decimal"
        ],
        "methods": [
          "initialize()",
          "exists(uint256)",
          "get(uint256)",
          "addTemplate(uint256,string,address,uint8,uint256,uint256,uint256[],uint256,uint256,uint256,uint256)",
          "eraseTemplate(uint256)",
          "verifyProposalParams(uint256,uint8,uint256,uint256,uint256[],uint256,uint256,uint256)",
          "verifyProposalContract(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/common/Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts/ownership/Ownable.sol:78"
            },
            {
              "label": "proposalTemplates",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_uint256,t_struct(ProposalTemplate)11906_storage)",
              "contract": "ProposalTemplates",
              "src": "contracts/verifiers/ProposalTemplates.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ExecType)4345": {
              "label": "enum Proposal.ExecType",
              "members": [
                "NONE",
                "CALL",
                "DELEGATECALL"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(ProposalTemplate)11906_storage)": {
              "label": "mapping(uint256 => struct ProposalTemplates.ProposalTemplate)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ProposalTemplate)11906_storage": {
              "label": "struct ProposalTemplates.ProposalTemplate",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "verifier",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executable",
                  "type": "t_enum(ExecType)4345",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "minVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minAgreement",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "opinionScales",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "minVotingDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "maxVotingDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "minStartDelay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "maxStartDelay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Version": {
        "src": "contracts/version/Version.sol:6",
        "version": {
          "withMetadata": "44a8dffc5504e4840b22e832d74abcb9b09028a3e03bff04174adfc1fbbc0b38",
          "withoutMetadata": "c928eced6e3066f3b9ec7b6a1f83ef80ffabaf3cae58675a9ac2878ac10f688a",
          "linkedWithoutMetadata": "c928eced6e3066f3b9ec7b6a1f83ef80ffabaf3cae58675a9ac2878ac10f688a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Migrations": {
        "src": "contracts/sfc/Migrations.sol:3",
        "version": {
          "withMetadata": "d169310f3c70cdb46fb12f4b2ba2ade86e108297bb64af9efc403520ff0447ef",
          "withoutMetadata": "29a1222cf3f4e2083f44c152fa9ae6533eb7028cb2fc22220dfe1691686d4be6",
          "linkedWithoutMetadata": "29a1222cf3f4e2083f44c152fa9ae6533eb7028cb2fc22220dfe1691686d4be6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "setCompleted(uint256)",
          "upgrade(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Migrations",
            "src": "contracts/sfc/Migrations.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Migrations",
              "src": "contracts/sfc/Migrations.sol:4"
            },
            {
              "label": "last_completed_migration",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Migrations",
              "src": "contracts/sfc/Migrations.sol:5"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Migrations": {
        "src": "contracts/Migrations.sol:4",
        "version": {
          "withMetadata": "da41bccef1019d58d1bdc5b69a0050ad4543241268d6adb9306cfebdab7bfbb0",
          "withoutMetadata": "831713aa2d6773e57b8bf22e20984944ddffc1828043fc8354635480d89f6885",
          "linkedWithoutMetadata": "831713aa2d6773e57b8bf22e20984944ddffc1828043fc8354635480d89f6885"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "setCompleted(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Migrations",
            "src": "contracts/Migrations.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Migrations",
              "src": "contracts/Migrations.sol:5"
            },
            {
              "label": "last_completed_migration",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Migrations",
              "src": "contracts/Migrations.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    }
  ]
}