{
  "version": "3.2",
  "log": [
    {
      "SafeMath": {
        "src": "contracts\\common\\SafeMath.sol:16",
        "version": {
          "withMetadata": "d10ebbed170881055600b4bd9a927e55b8d7db4d9b5bb6fa605a0a070655515a",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RelayProxy": {
        "src": "contracts\\adapters\\RelayProxy.sol:5",
        "version": {
          "withMetadata": "aba090ba5a75e947c759e55447d93a120be91ac3deb9d05e5c7438625c60d257",
          "withoutMetadata": "f13c1fc665b263d696859f8429da80a89ea18aa6afdc013b8d630e77c26ebcce",
          "linkedWithoutMetadata": "f13c1fc665b263d696859f8429da80a89ea18aa6afdc013b8d630e77c26ebcce"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "__transferOwnership(address)",
          "__setDestination(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RelayProxy",
            "src": "contracts\\adapters\\RelayProxy.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "__destination",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "RelayProxy",
              "src": "contracts\\adapters\\RelayProxy.sol:6"
            },
            {
              "label": "__owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RelayProxy",
              "src": "contracts\\adapters\\RelayProxy.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SFC": {
        "src": "contracts\\sfc\\SFC.sol:14",
        "version": {
          "withMetadata": "96f2dd2a0020398b2bbf5de1b76c9a7595baea0bc817e0a6a95f7dcaaba14a17",
          "withoutMetadata": "0c75606a126123fec7b22684262d407b0afbe1db1b3c1ba87e35083d22bdee5e",
          "linkedWithoutMetadata": "0c75606a126123fec7b22684262d407b0afbe1db1b3c1ba87e35083d22bdee5e"
        },
        "inherit": [
          "Version",
          "StakersConstants",
          "GovernanceRole",
          "Ownable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "Decimal"
        ],
        "methods": [
          "currentEpoch()",
          "getEpochValidatorIDs(uint256)",
          "getEpochReceivedStake(uint256,uint256)",
          "getEpochAccumulatedRewardPerToken(uint256,uint256)",
          "getEpochAccumulatedUptime(uint256,uint256)",
          "getEpochAccumulatedOriginatedTxsFee(uint256,uint256)",
          "getEpochOfflineTime(uint256,uint256)",
          "getEpochOfflineBlocks(uint256,uint256)",
          "rewardsStash(address,uint256)",
          "getLockedStake(address,uint256)",
          "minSelfStake()",
          "maxDelegatedRatio()",
          "validatorCommission()",
          "contractCommission()",
          "unlockedRewardRatio()",
          "minLockupDuration()",
          "maxLockupDuration()",
          "withdrawalPeriodEpochs()",
          "withdrawalPeriodTime()",
          "initialize(uint256,uint256,address,address,address)",
          "setGenesisValidator(address,uint256,bytes,uint256,uint256,uint256,uint256,uint256)",
          "setGenesisDelegation(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "createValidator(bytes)",
          "getSelfStake(uint256)",
          "delegate(uint256)",
          "undelegate(uint256,uint256,uint256)",
          "isSlashed(uint256)",
          "withdraw(uint256,uint256)",
          "deactivateValidator(uint256,uint256)",
          "pendingRewards(address,uint256)",
          "stashRewards(address,uint256)",
          "claimRewards(uint256)",
          "restakeRewards(uint256)",
          "_syncValidator(uint256,bool)",
          "offlinePenaltyThreshold()",
          "updateBaseRewardPerSecond(uint256)",
          "updateOfflinePenaltyThreshold(uint256,uint256)",
          "updateSlashingRefundRatio(uint256,uint256)",
          "updateStakeTokenizerAddress(address)",
          "updateTotalSupply(int256)",
          "mintFTM(address payable,uint256,string)",
          "sealEpoch(uint256[],uint256[],uint256[],uint256[])",
          "sealEpochValidators(uint256[])",
          "isLockedUp(address,uint256)",
          "getUnlockedStake(address,uint256)",
          "lockStake(uint256,uint256,uint256)",
          "relockStake(uint256,uint256,uint256)",
          "unlockStake(uint256,uint256)",
          "setMaxDelegation(uint256)",
          "setMinSelfStake(uint256)",
          "setValidatorCommission(uint256)",
          "setContractCommission(uint256)",
          "setUnlockedRewardRatio(uint256)",
          "setMinLockupDuration(uint256)",
          "setMaxLockupDuration(uint256)",
          "setWithdrawalPeriodEpoch(uint256)",
          "setWithdrawalPeriodTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            },
            {
              "label": "_governance",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "GovernanceRole",
              "src": "contracts\\ownership\\GovernanceRole.sol:18"
            },
            {
              "label": "_secondaryOwner",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "GovernanceRole",
              "src": "contracts\\ownership\\GovernanceRole.sol:19"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)50_storage",
              "contract": "GovernanceRole",
              "src": "contracts\\ownership\\GovernanceRole.sol:112"
            },
            {
              "label": "node",
              "offset": 0,
              "slot": "154",
              "type": "t_contract(NodeDriverAuth)6107",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:30"
            },
            {
              "label": "currentSealedEpoch",
              "offset": 0,
              "slot": "155",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:32"
            },
            {
              "label": "getValidator",
              "offset": 0,
              "slot": "156",
              "type": "t_mapping(t_uint256,t_struct(Validator)6577_storage)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:33"
            },
            {
              "label": "getValidatorID",
              "offset": 0,
              "slot": "157",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:34"
            },
            {
              "label": "getValidatorPubkey",
              "offset": 0,
              "slot": "158",
              "type": "t_mapping(t_uint256,t_bytes_storage)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:35"
            },
            {
              "label": "lastValidatorID",
              "offset": 0,
              "slot": "159",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:37"
            },
            {
              "label": "totalStake",
              "offset": 0,
              "slot": "160",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:38"
            },
            {
              "label": "totalActiveStake",
              "offset": 0,
              "slot": "161",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:39"
            },
            {
              "label": "totalSlashedStake",
              "offset": 0,
              "slot": "162",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:40"
            },
            {
              "label": "_rewardsStash",
              "offset": 0,
              "slot": "163",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)6608_storage))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:48"
            },
            {
              "label": "stashedRewardsUntilEpoch",
              "offset": 0,
              "slot": "164",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:50"
            },
            {
              "label": "getWithdrawalRequest",
              "offset": 0,
              "slot": "165",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)6627_storage)))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:59"
            },
            {
              "label": "getStake",
              "offset": 0,
              "slot": "166",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:69"
            },
            {
              "label": "getLockupInfo",
              "offset": 0,
              "slot": "167",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedDelegation)6644_storage))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:71"
            },
            {
              "label": "getStashedLockupRewards",
              "offset": 0,
              "slot": "168",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)6608_storage))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:74"
            },
            {
              "label": "baseRewardPerSecond",
              "offset": 0,
              "slot": "169",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:94"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "170",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:95"
            },
            {
              "label": "getEpochSnapshot",
              "offset": 0,
              "slot": "171",
              "type": "t_mapping(t_uint256,t_struct(EpochSnapshot)6704_storage)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:96"
            },
            {
              "label": "offlinePenaltyThresholdBlocksNum",
              "offset": 0,
              "slot": "172",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:98"
            },
            {
              "label": "offlinePenaltyThresholdTime",
              "offset": 0,
              "slot": "173",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:99"
            },
            {
              "label": "minStakeAmnt",
              "offset": 0,
              "slot": "174",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:101"
            },
            {
              "label": "maxDelegation",
              "offset": 0,
              "slot": "175",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:102"
            },
            {
              "label": "validatorCommissionFee",
              "offset": 0,
              "slot": "176",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:103"
            },
            {
              "label": "contractCommissionFee",
              "offset": 0,
              "slot": "177",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:104"
            },
            {
              "label": "unlockedReward",
              "offset": 0,
              "slot": "178",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:105"
            },
            {
              "label": "minLockup",
              "offset": 0,
              "slot": "179",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:106"
            },
            {
              "label": "maxLockup",
              "offset": 0,
              "slot": "180",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:107"
            },
            {
              "label": "withdrawalPeriodEpochValue",
              "offset": 0,
              "slot": "181",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:108"
            },
            {
              "label": "withdrawalPeriodTimeValue",
              "offset": 0,
              "slot": "182",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:109"
            },
            {
              "label": "slashingRefundRatio",
              "offset": 0,
              "slot": "183",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:111"
            },
            {
              "label": "stakeTokenizerAddress",
              "offset": 0,
              "slot": "184",
              "type": "t_address",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(NodeDriverAuth)6107": {
              "label": "contract NodeDriverAuth",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)6627_storage)))": {
              "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct SFC.WithdrawalRequest)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedDelegation)6644_storage))": {
              "label": "mapping(address => mapping(uint256 => struct SFC.LockedDelegation))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)6608_storage))": {
              "label": "mapping(address => mapping(uint256 => struct SFC.Rewards))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)6627_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct SFC.WithdrawalRequest))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(EpochSnapshot)6704_storage)": {
              "label": "mapping(uint256 => struct SFC.EpochSnapshot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LockedDelegation)6644_storage)": {
              "label": "mapping(uint256 => struct SFC.LockedDelegation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Rewards)6608_storage)": {
              "label": "mapping(uint256 => struct SFC.Rewards)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Validator)6577_storage)": {
              "label": "mapping(uint256 => struct SFC.Validator)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(WithdrawalRequest)6627_storage)": {
              "label": "mapping(uint256 => struct SFC.WithdrawalRequest)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EpochSnapshot)6704_storage": {
              "label": "struct SFC.EpochSnapshot",
              "members": [
                {
                  "label": "receivedStake",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accumulatedRewardPerToken",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "accumulatedUptime",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "accumulatedOriginatedTxsFee",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "offlineTime",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "offlineBlocks",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "validatorIDs",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "epochFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "totalBaseRewardWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "totalTxRewardWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "baseRewardPerSecond",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "totalStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(LockedDelegation)6644_storage": {
              "label": "struct SFC.LockedDelegation",
              "members": [
                {
                  "label": "lockedStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "fromEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Rewards)6608_storage": {
              "label": "struct SFC.Rewards",
              "members": [
                {
                  "label": "lockupExtraReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lockupBaseReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unlockedReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Validator)6577_storage": {
              "label": "struct SFC.Validator",
              "members": [
                {
                  "label": "status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "deactivatedTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "deactivatedEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "receivedStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "createdEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "createdTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "auth",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(WithdrawalRequest)6627_storage": {
              "label": "struct SFC.WithdrawalRequest",
              "members": [
                {
                  "label": "epoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "time",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SFCToGovernable": {
        "src": "contracts\\adapters\\SFCToGovernable.sol:19",
        "version": {
          "withMetadata": "0989f9330dfbab034d1abc569d32a3380ba65ca9ac5229e4b3b7eaabf1726328",
          "withoutMetadata": "67b1a6358e6653301bb5e85ea314821a7e367656c874e3061935bf1e69208814",
          "linkedWithoutMetadata": "67b1a6358e6653301bb5e85ea314821a7e367656c874e3061935bf1e69208814"
        },
        "inherit": [
          "Governable"
        ],
        "libraries": [],
        "methods": [
          "getTotalWeight()",
          "getReceivedWeight(address)",
          "getWeight(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "sfc",
            "src": "contracts\\adapters\\SFCToGovernable.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sfc",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SFC)383",
              "contract": "SFCToGovernable",
              "src": "contracts\\adapters\\SFCToGovernable.sol:20"
            }
          ],
          "types": {
            "t_contract(SFC)383": {
              "label": "contract SFC",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Decimal": {
        "src": "contracts\\common\\Decimal.sol:3",
        "version": {
          "withMetadata": "9b41a03176eee2388bc7bcdc3d60b7aaea378e603da276ec5697b70238a35018",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GetCode": {
        "src": "contracts\\common\\GetCode.sol:3",
        "version": {
          "withMetadata": "5f5fac698b01c50d18012be8a6e0b6d3ccda5881c0b51c4ff6dc385cd6a3db9e",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "contracts\\common\\Initializable.sol:16",
        "version": {
          "withMetadata": "a467b20eab82d425ad56b1b1884a46a2871f121b80e3540bcabe39526ecf3527",
          "withoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0",
          "linkedWithoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\common\\ReentrancyGuard.sol:16",
        "version": {
          "withMetadata": "08a080a3baae7111cf2de7d05c7dc81001063cd52c0218d1a71c6443ac3ae738",
          "withoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0",
          "linkedWithoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "51",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\common\\ReentrancyGuard.sol:18"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ReentrancyGuard",
              "src": "contracts\\common\\ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "contracts\\erc20\\base\\ERC20.sol:31",
        "version": {
          "withMetadata": "26e280606b12eab01545a4e0eca1407237cfe6564de8dc61ca84c28cd89d6106",
          "withoutMetadata": "59e97ea0984326e16ec095a5ffb9f3110a9e46b411a6a0d1dd7a63299cba01b7",
          "linkedWithoutMetadata": "59e97ea0984326e16ec095a5ffb9f3110a9e46b411a6a0d1dd7a63299cba01b7"
        },
        "inherit": [
          "IERC20",
          "Initializable"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:36"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:38"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "54",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:231"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Burnable": {
        "src": "contracts\\erc20\\base\\ERC20Burnable.sol:10",
        "version": {
          "withMetadata": "e9757ce37497a905d03d5c9fa53a0b18a603b1b5cf0688880a46b0a200423fa1",
          "withoutMetadata": "b747a231d956da9a91454ace147b9ff94b83fb688f6713d3f82c093c22c801c1",
          "linkedWithoutMetadata": "b747a231d956da9a91454ace147b9ff94b83fb688f6713d3f82c093c22c801c1"
        },
        "inherit": [
          "ERC20",
          "IERC20",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:36"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:38"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "54",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:231"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Detailed": {
        "src": "contracts\\erc20\\base\\ERC20Detailed.sol:9",
        "inherit": [
          "IERC20",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "51",
              "type": "t_string_storage",
              "contract": "ERC20Detailed",
              "src": "contracts\\erc20\\base\\ERC20Detailed.sol:10"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "52",
              "type": "t_string_storage",
              "contract": "ERC20Detailed",
              "src": "contracts\\erc20\\base\\ERC20Detailed.sol:11"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "53",
              "type": "t_uint8",
              "contract": "ERC20Detailed",
              "src": "contracts\\erc20\\base\\ERC20Detailed.sol:12"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "54",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20Detailed",
              "src": "contracts\\erc20\\base\\ERC20Detailed.sol:56"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Mintable": {
        "src": "contracts\\erc20\\base\\ERC20Mintable.sol:11",
        "version": {
          "withMetadata": "90c727f94cddce63809946d188b966fedc7b24cb99a366ee3faa24885b259772",
          "withoutMetadata": "613fd3fd60224a63354cf83b70f2f7d234f810734457b0d56840d26df057807a",
          "linkedWithoutMetadata": "613fd3fd60224a63354cf83b70f2f7d234f810734457b0d56840d26df057807a"
        },
        "inherit": [
          "MinterRole",
          "ERC20",
          "IERC20",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "mintingFinished()",
          "mint(address,uint256)",
          "finishMinting()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_mintingFinished",
            "src": "contracts\\erc20\\base\\ERC20Mintable.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:36"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:38"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "54",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:231"
            },
            {
              "label": "minters",
              "offset": 0,
              "slot": "104",
              "type": "t_struct(Role)1644_storage",
              "contract": "MinterRole",
              "src": "contracts\\erc20\\base\\MinterRole.sol:12"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "105",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MinterRole",
              "src": "contracts\\erc20\\base\\MinterRole.sol:37"
            },
            {
              "label": "_mintingFinished",
              "offset": 0,
              "slot": "155",
              "type": "t_bool",
              "contract": "ERC20Mintable",
              "src": "contracts\\erc20\\base\\ERC20Mintable.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Role)1644_storage": {
              "label": "struct Roles.Role",
              "members": [
                {
                  "label": "bearer",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\erc20\\base\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "MinterRole": {
        "src": "contracts\\erc20\\base\\MinterRole.sol:6",
        "version": {
          "withMetadata": "749fe7d790d76d4e4b15f11b097484cf29dbaf3f7cc8b0e3f496afb39549dfdf",
          "withoutMetadata": "cab9b38729dc83163b4060c438577d78fbe70a8db2849772cc53f20db747145c",
          "linkedWithoutMetadata": "cab9b38729dc83163b4060c438577d78fbe70a8db2849772cc53f20db747145c"
        },
        "inherit": [],
        "libraries": [
          "Roles"
        ],
        "methods": [
          "isMinter(address)",
          "renounceMinter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "minters",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Role)1644_storage",
              "contract": "MinterRole",
              "src": "contracts\\erc20\\base\\MinterRole.sol:12"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MinterRole",
              "src": "contracts\\erc20\\base\\MinterRole.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Role)1644_storage": {
              "label": "struct Roles.Role",
              "members": [
                {
                  "label": "bearer",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Roles": {
        "src": "contracts\\erc20\\base\\Roles.sol:8",
        "version": {
          "withMetadata": "dbfa538a5e358600041e59d58adf45e2be74f832b4619c7d5d0f9159a9329f92",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Constants": {
        "src": "contracts\\governance\\Constants.sol:48",
        "version": {
          "withMetadata": "8d7249ffc041fae52a2b97d00f1928f9078c30cfb69487f3e354d72ee916c319",
          "withoutMetadata": "e3c003c295bb5953d5e6c500d59e847d6999d3a7bf0ef241329a97a89b3d8861",
          "linkedWithoutMetadata": "e3c003c295bb5953d5e6c500d59e847d6999d3a7bf0ef241329a97a89b3d8861"
        },
        "inherit": [
          "StatusConstants"
        ],
        "libraries": [
          "SafeMath",
          "Decimal"
        ],
        "methods": [
          "minVotesAbsolute(uint256,uint256)",
          "bytes32ToString(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StatusConstants": {
        "src": "contracts\\governance\\Constants.sol:6",
        "version": {
          "withMetadata": "21cece588531d692a9ba8b64f5cf72fba90ecfd6f4496972fb89856c63acd393",
          "withoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0",
          "linkedWithoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Governance": {
        "src": "contracts\\governance\\Governance.sol:15",
        "version": {
          "withMetadata": "50a273681d6ef4f42b5ddb5396bd8bd3c979ef92421529040dc9d2c3d8ba139c",
          "withoutMetadata": "f0fce5364f59416b5c20e2a1f74ff1844829227c42b61601bc88d234644ced69",
          "linkedWithoutMetadata": "f0fce5364f59416b5c20e2a1f74ff1844829227c42b61601bc88d234644ced69"
        },
        "inherit": [
          "Version",
          "GovernanceSettings",
          "Constants",
          "StatusConstants",
          "ReentrancyGuard",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "LRC",
          "Proposal"
        ],
        "methods": [
          "initialize(address,address)",
          "proposalParams(uint256)",
          "proposalOptionState(uint256,uint256)",
          "proposalState(uint256)",
          "getVote(address,address,uint256)",
          "tasksCount()",
          "getTask(uint256)",
          "vote(address,uint256,uint256[])",
          "createProposal(address)",
          "cancelProposal(uint256)",
          "handleTasks(uint256,uint256)",
          "tasksCleanup(uint256)",
          "calculateVotingTally(uint256)",
          "cancelVote(address,uint256)",
          "recountVote(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts\\governance\\Governance.sol:283"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "51",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\common\\ReentrancyGuard.sol:18"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ReentrancyGuard",
              "src": "contracts\\common\\ReentrancyGuard.sol:40"
            },
            {
              "label": "governableContract",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(Governable)4268",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:41"
            },
            {
              "label": "proposalVerifier",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IProposalVerifier)11594",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:42"
            },
            {
              "label": "lastProposalID",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:43"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "105",
              "type": "t_array(t_struct(Task)1916_storage)dyn_storage",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:44"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_struct(ProposalState)1909_storage)",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:46"
            },
            {
              "label": "overriddenWeight",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:47"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(Vote)1896_storage)))",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Task)1916_storage)dyn_storage": {
              "label": "struct Governance.Task[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(Governable)4268": {
              "label": "contract Governable",
              "numberOfBytes": "20"
            },
            "t_contract(IProposalVerifier)11594": {
              "label": "contract IProposalVerifier",
              "numberOfBytes": "20"
            },
            "t_enum(ExecType)4224": {
              "label": "enum Proposal.ExecType",
              "members": [
                "NONE",
                "CALL",
                "DELEGATECALL"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(Vote)1896_storage)))": {
              "label": "mapping(address => mapping(address => mapping(uint256 => struct Governance.Vote)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Vote)1896_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Governance.Vote))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Option)4055_storage)": {
              "label": "mapping(uint256 => struct LRC.Option)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalState)1909_storage)": {
              "label": "mapping(uint256 => struct Governance.ProposalState)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Vote)1896_storage)": {
              "label": "mapping(uint256 => struct Governance.Vote)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Option)4055_storage": {
              "label": "struct LRC.Option",
              "members": [
                {
                  "label": "votes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "agreement",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Parameters)4243_storage": {
              "label": "struct Proposal.Parameters",
              "members": [
                {
                  "label": "pType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "executable",
                  "type": "t_enum(ExecType)4224",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minAgreement",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "opinionScales",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "proposalContract",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "options",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "deadlines",
                  "type": "t_struct(Timeline)4220_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(ProposalState)1909_storage": {
              "label": "struct Governance.ProposalState",
              "members": [
                {
                  "label": "params",
                  "type": "t_struct(Parameters)4243_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "options",
                  "type": "t_mapping(t_uint256,t_struct(Option)4055_storage)",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "winnerOptionID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "votes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Task)1916_storage": {
              "label": "struct Governance.Task",
              "members": [
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "assignment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "proposalID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Timeline)4220_storage": {
              "label": "struct Proposal.Timeline",
              "members": [
                {
                  "label": "votingStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votingMinEndTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "votingMaxEndTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Vote)1896_storage": {
              "label": "struct Governance.Vote",
              "members": [
                {
                  "label": "weight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "choices",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernanceSettings": {
        "src": "contracts\\governance\\GovernanceSettings.sol:12",
        "version": {
          "withMetadata": "85b70229228af5e18af2f871a893f36a796fd026300d993526e072fdd5f89751",
          "withoutMetadata": "cf9f40d6cff8718fb8b3a32bedf0671e47dcd22325ef6c0847a396588b46970e",
          "linkedWithoutMetadata": "cf9f40d6cff8718fb8b3a32bedf0671e47dcd22325ef6c0847a396588b46970e"
        },
        "inherit": [
          "Constants",
          "StatusConstants"
        ],
        "libraries": [],
        "methods": [
          "proposalFee()",
          "proposalBurntFee()",
          "taskHandlingReward()",
          "taskErasingReward()",
          "maxOptions()",
          "maxExecutionPeriod()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LRC": {
        "src": "contracts\\governance\\LRC.sol:9",
        "version": {
          "withMetadata": "6f13707eb8de9bcb07349388e658b93f88951939d0d18ea037f8a2668e728bc3",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Decimal"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Proposal": {
        "src": "contracts\\governance\\Proposal.sol:5",
        "version": {
          "withMetadata": "1bf4679c169f734e9c2277a824485211c51a1eed9a23dacf4204ddea7198861b",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Governable": {
        "src": "contracts\\model\\Governable.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTotalWeight()",
          "getReceivedWeight(address)",
          "getWeight(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovernanceRole": {
        "src": "contracts\\ownership\\GovernanceRole.sol:13",
        "version": {
          "withMetadata": "77370e4c37974e504e3799a890f51c27722b30a360e64c2e0e1444038e36cf42",
          "withoutMetadata": "1a9bce56692a29665a1edc4a74e4db736acb02e76a659eb0f25b5c4e98c95002",
          "linkedWithoutMetadata": "1a9bce56692a29665a1edc4a74e4db736acb02e76a659eb0f25b5c4e98c95002"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "governance()",
          "isGovernance()",
          "transferGovernance(address)",
          "secondaryOwner()",
          "isSecondaryOwner()",
          "transferSecondaryOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_governance",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "GovernanceRole",
              "src": "contracts\\ownership\\GovernanceRole.sol:18"
            },
            {
              "label": "_secondaryOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "GovernanceRole",
              "src": "contracts\\ownership\\GovernanceRole.sol:19"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)50_storage",
              "contract": "GovernanceRole",
              "src": "contracts\\ownership\\GovernanceRole.sol:112"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Ownable": {
        "src": "contracts\\ownership\\Ownable.sol:14",
        "version": {
          "withMetadata": "333f233460930a59d7470a49755e239311647425f2af076e7b3156c20f8e5e63",
          "withoutMetadata": "9a175aae8b6ce193ed673d711cb1359bca74ca946ba8fa8a8e0b82a894149dfb",
          "linkedWithoutMetadata": "9a175aae8b6ce193ed673d711cb1359bca74ca946ba8fa8a8e0b82a894149dfb"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PlainTextProposal": {
        "src": "contracts\\proposal\\PlainTextProposal.sol:9",
        "version": {
          "withMetadata": "0e75f862012cf0b5b41be07e1ab29728eef06940b81521e6a72756f4146f8432",
          "withoutMetadata": "0e75f862012cf0b5b41be07e1ab29728eef06940b81521e6a72756f4146f8432",
          "linkedWithoutMetadata": "0e75f862012cf0b5b41be07e1ab29728eef06940b81521e6a72756f4146f8432"
        },
        "inherit": [
          "Cancelable",
          "Ownable",
          "Initializable",
          "NonExecutableProposal",
          "BaseProposal",
          "IProposal"
        ],
        "libraries": [],
        "methods": [
          "(string,string,bytes32[],uint256,uint256,uint256,uint256,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PlainTextProposal",
            "src": "contracts\\proposal\\PlainTextProposal.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:24"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "61",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoftwareUpgradeProposal": {
        "src": "contracts\\proposal\\SoftwareUpgradeProposal.sol:10",
        "version": {
          "withMetadata": "2cbffb22d40c2059c2e8513d32cea6e7f26286759e6a9c048edefd50577f5275",
          "withoutMetadata": "2cbffb22d40c2059c2e8513d32cea6e7f26286759e6a9c048edefd50577f5275",
          "linkedWithoutMetadata": "2cbffb22d40c2059c2e8513d32cea6e7f26286759e6a9c048edefd50577f5275"
        },
        "inherit": [
          "Cancelable",
          "Ownable",
          "Initializable",
          "DelegatecallExecutableProposal",
          "BaseProposal",
          "IProposal"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,uint256,uint256,uint256,uint256,address,address,address)",
          "execute_delegatecall(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoftwareUpgradeProposal",
            "src": "contracts\\proposal\\SoftwareUpgradeProposal.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:24"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "61",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            },
            {
              "label": "upgradeableContract",
              "offset": 0,
              "slot": "111",
              "type": "t_address",
              "contract": "SoftwareUpgradeProposal",
              "src": "contracts\\proposal\\SoftwareUpgradeProposal.sol:11"
            },
            {
              "label": "newImplementation",
              "offset": 0,
              "slot": "112",
              "type": "t_address",
              "contract": "SoftwareUpgradeProposal",
              "src": "contracts\\proposal\\SoftwareUpgradeProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BaseProposal": {
        "src": "contracts\\proposal\\base\\BaseProposal.sol:11",
        "version": {
          "withMetadata": "598d4b1980b14f09d749adde8041ac48e70559942a3135b4a15c2b59b17d9fc5",
          "withoutMetadata": "3ad110707e6647407ac4ee60071b1c5cc55ffeace426dd404feb8f9ae01061fc",
          "linkedWithoutMetadata": "3ad110707e6647407ac4ee60071b1c5cc55ffeace426dd404feb8f9ae01061fc"
        },
        "inherit": [
          "IProposal"
        ],
        "libraries": [
          "SafeMath",
          "Proposal"
        ],
        "methods": [
          "verifyProposalParams(address)",
          "pType()",
          "executable()",
          "minVotes()",
          "minAgreement()",
          "opinionScales()",
          "options()",
          "votingStartTime()",
          "votingMinEndTime()",
          "votingMaxEndTime()",
          "name()",
          "description()",
          "execute_delegatecall(address,uint256)",
          "execute_call(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:24"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CallExecutableProposal": {
        "src": "contracts\\proposal\\base\\CallExecutableProposal.sol:6",
        "version": {
          "withMetadata": "ccfac819d1269ad66c8e71e9622f7930b50596a6c7296418af24ebb752a2bd30",
          "withoutMetadata": "cceb9443c5f5a12ceba8ae64c2ad531e8f4368eb45ef0fe9169816df64aabb2f",
          "linkedWithoutMetadata": "cceb9443c5f5a12ceba8ae64c2ad531e8f4368eb45ef0fe9169816df64aabb2f"
        },
        "inherit": [
          "BaseProposal",
          "IProposal"
        ],
        "libraries": [
          "Proposal"
        ],
        "methods": [
          "executable()",
          "pType()",
          "execute_call(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:24"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Cancelable": {
        "src": "contracts\\proposal\\base\\Cancelable.sol:6",
        "version": {
          "withMetadata": "872ecc976aaa456924af5a67043a8fd5f2c15fafbd77204314e4bd9217b6492f",
          "withoutMetadata": "872ecc976aaa456924af5a67043a8fd5f2c15fafbd77204314e4bd9217b6492f",
          "linkedWithoutMetadata": "872ecc976aaa456924af5a67043a8fd5f2c15fafbd77204314e4bd9217b6492f"
        },
        "inherit": [
          "Ownable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "cancel(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Cancelable",
            "src": "contracts\\proposal\\base\\Cancelable.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DelegatecallExecutableProposal": {
        "src": "contracts\\proposal\\base\\DelegatecallExecutableProposal.sol:6",
        "version": {
          "withMetadata": "ddb9774aca5f1f0994279cf9609603bfa974d98930f0751f158251f68292677d",
          "withoutMetadata": "ba352828d3a480b2e58077a65031dffe1b68def957f49e5cab9d3319a3b164a3",
          "linkedWithoutMetadata": "ba352828d3a480b2e58077a65031dffe1b68def957f49e5cab9d3319a3b164a3"
        },
        "inherit": [
          "BaseProposal",
          "IProposal"
        ],
        "libraries": [
          "Proposal"
        ],
        "methods": [
          "executable()",
          "pType()",
          "execute_delegatecall(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:24"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IProposal": {
        "src": "contracts\\proposal\\base\\IProposal.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "pType()",
          "executable()",
          "minVotes()",
          "minAgreement()",
          "opinionScales()",
          "options()",
          "votingStartTime()",
          "votingMinEndTime()",
          "votingMaxEndTime()",
          "execute_call(uint256)",
          "execute_delegatecall(address,uint256)",
          "name()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NonExecutableProposal": {
        "src": "contracts\\proposal\\base\\NonExecutableProposal.sol:6",
        "version": {
          "withMetadata": "0ef83817c4841296a40df9b59726be8633ea099c407c601064dc7d888472c85b",
          "withoutMetadata": "6322dc033bd491432bf10bf111fe38a5504260604942e4573252f4e21d19f91f",
          "linkedWithoutMetadata": "6322dc033bd491432bf10bf111fe38a5504260604942e4573252f4e21d19f91f"
        },
        "inherit": [
          "BaseProposal",
          "IProposal"
        ],
        "libraries": [
          "Proposal"
        ],
        "methods": [
          "pType()",
          "executable()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:24"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AlteredPlainTextProposal": {
        "src": "contracts\\proposal\\test\\AlteredPlainTextProposal.sol:5",
        "version": {
          "withMetadata": "e78af9e2a8fb3dbb180aa61c21714458fa31df33f4eb45cb3ffff2c0b03367e5",
          "withoutMetadata": "e78af9e2a8fb3dbb180aa61c21714458fa31df33f4eb45cb3ffff2c0b03367e5",
          "linkedWithoutMetadata": "e78af9e2a8fb3dbb180aa61c21714458fa31df33f4eb45cb3ffff2c0b03367e5"
        },
        "inherit": [
          "PlainTextProposal",
          "Cancelable",
          "Ownable",
          "Initializable",
          "NonExecutableProposal",
          "BaseProposal",
          "IProposal"
        ],
        "libraries": [],
        "methods": [
          "(string,string,bytes32[],uint256,uint256,uint256,uint256,uint256,address)",
          "name()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AlteredPlainTextProposal",
            "src": "contracts\\proposal\\test\\AlteredPlainTextProposal.sol:6"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:24"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "61",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ExecLoggingProposal": {
        "src": "contracts\\proposal\\test\\ExecLoggingProposal.sol:7",
        "version": {
          "withMetadata": "0a2c59b9c8ab0a9cf1f2ef24dc548040066072efc96b513d71ecb9afaba83fc1",
          "withoutMetadata": "0a2c59b9c8ab0a9cf1f2ef24dc548040066072efc96b513d71ecb9afaba83fc1",
          "linkedWithoutMetadata": "0a2c59b9c8ab0a9cf1f2ef24dc548040066072efc96b513d71ecb9afaba83fc1"
        },
        "inherit": [
          "PlainTextProposal",
          "Cancelable",
          "Ownable",
          "Initializable",
          "NonExecutableProposal",
          "BaseProposal",
          "IProposal"
        ],
        "libraries": [],
        "methods": [
          "(string,string,bytes32[],uint256,uint256,uint256,uint256,uint256,address)",
          "setOpinionScales(uint256[])",
          "pType()",
          "executable()",
          "setExecutable(uint8)",
          "cancel(uint256,address)",
          "executeNonDelegateCall(address,address,uint256)",
          "execute_delegatecall(address,uint256)",
          "execute_call(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ExecLoggingProposal",
            "src": "contracts\\proposal\\test\\ExecLoggingProposal.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:24"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "61",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            },
            {
              "label": "_exec",
              "offset": 0,
              "slot": "111",
              "type": "t_enum(ExecType)4224",
              "contract": "ExecLoggingProposal",
              "src": "contracts\\proposal\\test\\ExecLoggingProposal.sol:8"
            },
            {
              "label": "executedCounter",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "ExecLoggingProposal",
              "src": "contracts\\proposal\\test\\ExecLoggingProposal.sol:34"
            },
            {
              "label": "executedMsgSender",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "ExecLoggingProposal",
              "src": "contracts\\proposal\\test\\ExecLoggingProposal.sol:35"
            },
            {
              "label": "executedAs",
              "offset": 0,
              "slot": "114",
              "type": "t_address",
              "contract": "ExecLoggingProposal",
              "src": "contracts\\proposal\\test\\ExecLoggingProposal.sol:36"
            },
            {
              "label": "executedOption",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "ExecLoggingProposal",
              "src": "contracts\\proposal\\test\\ExecLoggingProposal.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ExecType)4224": {
              "label": "enum Proposal.ExecType",
              "members": [
                "NONE",
                "CALL",
                "DELEGATECALL"
              ],
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ExplicitProposal": {
        "src": "contracts\\proposal\\test\\ExplicitProposal.sol:5",
        "version": {
          "withMetadata": "b0c68e34fe9e30bc7a3d848b8b2d384f24e27cab8f1094c6f360fc8aaebd6e49",
          "withoutMetadata": "ba89465663e66e8cf52bf07fe5cd9806e682a38a0fb1ff21658d03eb570b98ac",
          "linkedWithoutMetadata": "ba89465663e66e8cf52bf07fe5cd9806e682a38a0fb1ff21658d03eb570b98ac"
        },
        "inherit": [
          "BaseProposal",
          "IProposal"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "setType(uint256)",
          "setMinVotes(uint256)",
          "setMinAgreement(uint256)",
          "setOpinionScales(uint256[])",
          "setVotingStartTime(uint256)",
          "setVotingMinEndTime(uint256)",
          "setVotingMaxEndTime(uint256)",
          "setExecutable(uint8)",
          "setOptions(bytes32[])",
          "setName(string)",
          "setDescription(string)",
          "pType()",
          "executable()",
          "votingStartTime()",
          "votingMinEndTime()",
          "votingMaxEndTime()",
          "execute_delegatecall(address,uint256)",
          "execute_call(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:24"
            },
            {
              "label": "_pType",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ExplicitProposal",
              "src": "contracts\\proposal\\test\\ExplicitProposal.sol:8"
            },
            {
              "label": "_exec",
              "offset": 0,
              "slot": "10",
              "type": "t_enum(ExecType)4224",
              "contract": "ExplicitProposal",
              "src": "contracts\\proposal\\test\\ExplicitProposal.sol:9"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ExecType)4224": {
              "label": "enum Proposal.ExecType",
              "members": [
                "NONE",
                "CALL",
                "DELEGATECALL"
              ],
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NetworkInitializer": {
        "src": "contracts\\sfc\\NetworkInitializer.sol:6",
        "version": {
          "withMetadata": "01b34b3823661ce42426d4b4454763454718d01eb9c966040b35a6a3ed3ca2f2",
          "withoutMetadata": "0a11995cd2343965b83c08360179ef595f8a694b3ec3b58e82f150fec0ccf747",
          "linkedWithoutMetadata": "0a11995cd2343965b83c08360179ef595f8a694b3ec3b58e82f150fec0ccf747"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initializeAll(uint256,uint256,address,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "selfdestruct",
            "src": "contracts\\sfc\\NetworkInitializer.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EVMWriter": {
        "src": "contracts\\sfc\\NodeDriver.sol:199",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setBalance(address,uint256)",
          "copyCode(address,address)",
          "swapCode(address,address)",
          "setStorage(address,bytes32,bytes32)",
          "incNonce(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NodeDriver": {
        "src": "contracts\\sfc\\NodeDriver.sol:101",
        "version": {
          "withMetadata": "61961b09bd46023a13f9e278dfc9d7b8519ff6f68cbb96b295e47b2d136057da",
          "withoutMetadata": "c134281afc10a259ce8648962f5458252c3732ded76b4a64004c707149b52038",
          "linkedWithoutMetadata": "c134281afc10a259ce8648962f5458252c3732ded76b4a64004c707149b52038"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setBackend(address)",
          "initialize(address,address)",
          "setBalance(address,uint256)",
          "copyCode(address,address)",
          "swapCode(address,address)",
          "setStorage(address,bytes32,bytes32)",
          "incNonce(address,uint256)",
          "updateNetworkRules(bytes)",
          "updateNetworkVersion(uint256)",
          "advanceEpochs(uint256)",
          "updateValidatorWeight(uint256,uint256)",
          "updateValidatorPubkey(uint256,bytes)",
          "setGenesisValidator(address,uint256,bytes,uint256,uint256,uint256,uint256,uint256)",
          "setGenesisDelegation(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "deactivateValidator(uint256,uint256)",
          "sealEpochValidators(uint256[])",
          "sealEpoch(uint256[],uint256[],uint256[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "sfc",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(SFC)10932",
              "contract": "NodeDriver",
              "src": "contracts\\sfc\\NodeDriver.sol:102"
            },
            {
              "label": "backend",
              "offset": 0,
              "slot": "52",
              "type": "t_contract(NodeDriver)6502",
              "contract": "NodeDriver",
              "src": "contracts\\sfc\\NodeDriver.sol:103"
            },
            {
              "label": "evmWriter",
              "offset": 0,
              "slot": "53",
              "type": "t_contract(EVMWriter)6540",
              "contract": "NodeDriver",
              "src": "contracts\\sfc\\NodeDriver.sol:104"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(EVMWriter)6540": {
              "label": "contract EVMWriter",
              "numberOfBytes": "20"
            },
            "t_contract(NodeDriver)6502": {
              "label": "contract NodeDriver",
              "numberOfBytes": "20"
            },
            "t_contract(SFC)10932": {
              "label": "contract SFC",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NodeDriverAuth": {
        "src": "contracts\\sfc\\NodeDriver.sol:8",
        "version": {
          "withMetadata": "101d8a537e178c206e005626b9595b64eb0a56d61cdc8202446b78dda4bdcbfd",
          "withoutMetadata": "1ca166c3151d8a4c633feddc8677b8dc574498eb84ee56374b63b1a5f97838e4",
          "linkedWithoutMetadata": "1ca166c3151d8a4c633feddc8677b8dc574498eb84ee56374b63b1a5f97838e4"
        },
        "inherit": [
          "Ownable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "initialize(address,address,address)",
          "migrateTo(address)",
          "incBalance(address,uint256)",
          "upgradeCode(address,address)",
          "copyCode(address,address)",
          "incNonce(address,uint256)",
          "updateNetworkRules(bytes)",
          "updateNetworkVersion(uint256)",
          "advanceEpochs(uint256)",
          "updateValidatorWeight(uint256,uint256)",
          "updateValidatorPubkey(uint256,bytes)",
          "setGenesisValidator(address,uint256,bytes,uint256,uint256,uint256,uint256,uint256)",
          "setGenesisDelegation(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "deactivateValidator(uint256,uint256)",
          "sealEpochValidators(uint256[])",
          "sealEpoch(uint256[],uint256[],uint256[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            },
            {
              "label": "sfc",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(SFC)10932",
              "contract": "NodeDriverAuth",
              "src": "contracts\\sfc\\NodeDriver.sol:11"
            },
            {
              "label": "driver",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(NodeDriver)6502",
              "contract": "NodeDriverAuth",
              "src": "contracts\\sfc\\NodeDriver.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(NodeDriver)6502": {
              "label": "contract NodeDriver",
              "numberOfBytes": "20"
            },
            "t_contract(SFC)10932": {
              "label": "contract SFC",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Spacer": {
        "src": "contracts\\sfc\\StakeTokenizer.sol:8",
        "version": {
          "withMetadata": "2f9e45aa08ea5f2514eeee09a091812251f8bc727f0c59954bb6c354ee5825a2",
          "withoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0",
          "linkedWithoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Spacer",
              "src": "contracts\\sfc\\StakeTokenizer.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StakeTokenizer": {
        "src": "contracts\\sfc\\StakeTokenizer.sol:12",
        "version": {
          "withMetadata": "48b75f1df73b252588077042108e4cf7db7bafa67b90db9cc9cfddc5ed02a1d3",
          "withoutMetadata": "4be2a8e7fdfec41a2d963b80feb88ad15d6f7e0c80fbc37fbc1206f234ad277a",
          "linkedWithoutMetadata": "4be2a8e7fdfec41a2d963b80feb88ad15d6f7e0c80fbc37fbc1206f234ad277a"
        },
        "inherit": [
          "Initializable",
          "Spacer"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "mintSFTM(uint256)",
          "redeemSFTM(uint256,uint256)",
          "allowedToWithdrawStake(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Spacer",
              "src": "contracts\\sfc\\StakeTokenizer.sol:9"
            },
            {
              "label": "initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "sfc",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(SFC)10932",
              "contract": "StakeTokenizer",
              "src": "contracts\\sfc\\StakeTokenizer.sol:13"
            },
            {
              "label": "outstandingSFTM",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "StakeTokenizer",
              "src": "contracts\\sfc\\StakeTokenizer.sol:15"
            },
            {
              "label": "sFTMTokenAddress",
              "offset": 0,
              "slot": "53",
              "type": "t_address",
              "contract": "StakeTokenizer",
              "src": "contracts\\sfc\\StakeTokenizer.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SFC)10932": {
              "label": "contract SFC",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StakersConstants": {
        "src": "contracts\\sfc\\StakerConstants.sol:6",
        "version": {
          "withMetadata": "0cd2c2b8898101404317ae01c3fa1eb101880f3954afcd5e11019c35004e321e",
          "withoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0",
          "linkedWithoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StubEvmWriter": {
        "src": "contracts\\test\\StubEvmWriter.sol:5",
        "version": {
          "withMetadata": "c37c19320d3ce52866dc317deeeb5f1515b23b3103a172e48ff8422eb4e164bd",
          "withoutMetadata": "80c4a61a540894d8188cd82226c2a766302c2297a62b5ee26e1fa5514e84d25c",
          "linkedWithoutMetadata": "80c4a61a540894d8188cd82226c2a766302c2297a62b5ee26e1fa5514e84d25c"
        },
        "inherit": [
          "EVMWriter"
        ],
        "libraries": [],
        "methods": [
          "setBalance(address,uint256)",
          "copyCode(address,address)",
          "swapCode(address,address)",
          "setStorage(address,bytes32,bytes32)",
          "incNonce(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UnitTestGovernable": {
        "src": "contracts\\test\\UnitTestGovernable.sol:5",
        "version": {
          "withMetadata": "80f3eea3e66a27b5e6ee80e84f4a09189e6d603da7209a68183f93ebec024c4c",
          "withoutMetadata": "d24b4c23f8ddc483bd5deb6dbc4620bc06aea77bcad30f9d83a877ae193a4412",
          "linkedWithoutMetadata": "d24b4c23f8ddc483bd5deb6dbc4620bc06aea77bcad30f9d83a877ae193a4412"
        },
        "inherit": [
          "Governable"
        ],
        "libraries": [],
        "methods": [
          "stake(address,uint256)",
          "unstake(address,uint256)",
          "getTotalWeight()",
          "getReceivedWeight(address)",
          "getWeight(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "delegations",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnitTestGovernable",
              "src": "contracts\\test\\UnitTestGovernable.sol:6"
            },
            {
              "label": "rcvDelegations",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnitTestGovernable",
              "src": "contracts\\test\\UnitTestGovernable.sol:7"
            },
            {
              "label": "totalStake",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnitTestGovernable",
              "src": "contracts\\test\\UnitTestGovernable.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnitTestGovernance": {
        "src": "contracts\\test\\UnitTestGovernance.sol:5",
        "version": {
          "withMetadata": "b071c9465fecc6486a0dcdf0da943ef62b41c2df0b433298b15164ee423375b7",
          "withoutMetadata": "ad6025e8487c94609c7c8521296cb6b261b27f48bf41f6fd15f4ab0ca55d99ec",
          "linkedWithoutMetadata": "ad6025e8487c94609c7c8521296cb6b261b27f48bf41f6fd15f4ab0ca55d99ec"
        },
        "inherit": [
          "Governance",
          "Version",
          "GovernanceSettings",
          "Constants",
          "StatusConstants",
          "ReentrancyGuard",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proposalFee()",
          "proposalBurntFee()",
          "taskHandlingReward()",
          "taskErasingReward()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "51",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\common\\ReentrancyGuard.sol:18"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ReentrancyGuard",
              "src": "contracts\\common\\ReentrancyGuard.sol:40"
            },
            {
              "label": "governableContract",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(Governable)4268",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:41"
            },
            {
              "label": "proposalVerifier",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IProposalVerifier)11594",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:42"
            },
            {
              "label": "lastProposalID",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:43"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "105",
              "type": "t_array(t_struct(Task)1916_storage)dyn_storage",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:44"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_struct(ProposalState)1909_storage)",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:46"
            },
            {
              "label": "overriddenWeight",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:47"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(Vote)1896_storage)))",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Task)1916_storage)dyn_storage": {
              "label": "struct Governance.Task[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(Governable)4268": {
              "label": "contract Governable",
              "numberOfBytes": "20"
            },
            "t_contract(IProposalVerifier)11594": {
              "label": "contract IProposalVerifier",
              "numberOfBytes": "20"
            },
            "t_enum(ExecType)4224": {
              "label": "enum Proposal.ExecType",
              "members": [
                "NONE",
                "CALL",
                "DELEGATECALL"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(Vote)1896_storage)))": {
              "label": "mapping(address => mapping(address => mapping(uint256 => struct Governance.Vote)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Vote)1896_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Governance.Vote))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Option)4055_storage)": {
              "label": "mapping(uint256 => struct LRC.Option)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalState)1909_storage)": {
              "label": "mapping(uint256 => struct Governance.ProposalState)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Vote)1896_storage)": {
              "label": "mapping(uint256 => struct Governance.Vote)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Option)4055_storage": {
              "label": "struct LRC.Option",
              "members": [
                {
                  "label": "votes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "agreement",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Parameters)4243_storage": {
              "label": "struct Proposal.Parameters",
              "members": [
                {
                  "label": "pType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "executable",
                  "type": "t_enum(ExecType)4224",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minAgreement",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "opinionScales",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "proposalContract",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "options",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "deadlines",
                  "type": "t_struct(Timeline)4220_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(ProposalState)1909_storage": {
              "label": "struct Governance.ProposalState",
              "members": [
                {
                  "label": "params",
                  "type": "t_struct(Parameters)4243_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "options",
                  "type": "t_mapping(t_uint256,t_struct(Option)4055_storage)",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "winnerOptionID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "votes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Task)1916_storage": {
              "label": "struct Governance.Task",
              "members": [
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "assignment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "proposalID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Timeline)4220_storage": {
              "label": "struct Proposal.Timeline",
              "members": [
                {
                  "label": "votingStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votingMinEndTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "votingMaxEndTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Vote)1896_storage": {
              "label": "struct Governance.Vote",
              "members": [
                {
                  "label": "weight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "choices",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnitTestSFC": {
        "src": "contracts\\test\\UnitTestSFC.sol:5",
        "version": {
          "withMetadata": "ffdfc529ad3fd55e17d3893f2f0dd8a844a53eb6930d200401c16d9160431b40",
          "withoutMetadata": "362ac5610c3752d23153b0ff9287edbc7ec6c6f07c3d97494ed5ff4c194248f4",
          "linkedWithoutMetadata": "362ac5610c3752d23153b0ff9287edbc7ec6c6f07c3d97494ed5ff4c194248f4"
        },
        "inherit": [
          "SFC",
          "Version",
          "StakersConstants",
          "GovernanceRole",
          "Ownable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "minSelfStake()",
          "rebaseTime()",
          "advanceTime(uint256)",
          "getTime()",
          "getBlockTime()",
          "highestLockupEpoch(address,uint256)",
          "enableNonNodeCalls()",
          "disableNonNodeCalls()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            },
            {
              "label": "_governance",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "GovernanceRole",
              "src": "contracts\\ownership\\GovernanceRole.sol:18"
            },
            {
              "label": "_secondaryOwner",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "GovernanceRole",
              "src": "contracts\\ownership\\GovernanceRole.sol:19"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)50_storage",
              "contract": "GovernanceRole",
              "src": "contracts\\ownership\\GovernanceRole.sol:112"
            },
            {
              "label": "node",
              "offset": 0,
              "slot": "154",
              "type": "t_contract(NodeDriverAuth)6107",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:30"
            },
            {
              "label": "currentSealedEpoch",
              "offset": 0,
              "slot": "155",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:32"
            },
            {
              "label": "getValidator",
              "offset": 0,
              "slot": "156",
              "type": "t_mapping(t_uint256,t_struct(Validator)6577_storage)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:33"
            },
            {
              "label": "getValidatorID",
              "offset": 0,
              "slot": "157",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:34"
            },
            {
              "label": "getValidatorPubkey",
              "offset": 0,
              "slot": "158",
              "type": "t_mapping(t_uint256,t_bytes_storage)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:35"
            },
            {
              "label": "lastValidatorID",
              "offset": 0,
              "slot": "159",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:37"
            },
            {
              "label": "totalStake",
              "offset": 0,
              "slot": "160",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:38"
            },
            {
              "label": "totalActiveStake",
              "offset": 0,
              "slot": "161",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:39"
            },
            {
              "label": "totalSlashedStake",
              "offset": 0,
              "slot": "162",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:40"
            },
            {
              "label": "_rewardsStash",
              "offset": 0,
              "slot": "163",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)6608_storage))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:48"
            },
            {
              "label": "stashedRewardsUntilEpoch",
              "offset": 0,
              "slot": "164",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:50"
            },
            {
              "label": "getWithdrawalRequest",
              "offset": 0,
              "slot": "165",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)6627_storage)))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:59"
            },
            {
              "label": "getStake",
              "offset": 0,
              "slot": "166",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:69"
            },
            {
              "label": "getLockupInfo",
              "offset": 0,
              "slot": "167",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedDelegation)6644_storage))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:71"
            },
            {
              "label": "getStashedLockupRewards",
              "offset": 0,
              "slot": "168",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)6608_storage))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:74"
            },
            {
              "label": "baseRewardPerSecond",
              "offset": 0,
              "slot": "169",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:94"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "170",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:95"
            },
            {
              "label": "getEpochSnapshot",
              "offset": 0,
              "slot": "171",
              "type": "t_mapping(t_uint256,t_struct(EpochSnapshot)6704_storage)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:96"
            },
            {
              "label": "offlinePenaltyThresholdBlocksNum",
              "offset": 0,
              "slot": "172",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:98"
            },
            {
              "label": "offlinePenaltyThresholdTime",
              "offset": 0,
              "slot": "173",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:99"
            },
            {
              "label": "minStakeAmnt",
              "offset": 0,
              "slot": "174",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:101"
            },
            {
              "label": "maxDelegation",
              "offset": 0,
              "slot": "175",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:102"
            },
            {
              "label": "validatorCommissionFee",
              "offset": 0,
              "slot": "176",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:103"
            },
            {
              "label": "contractCommissionFee",
              "offset": 0,
              "slot": "177",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:104"
            },
            {
              "label": "unlockedReward",
              "offset": 0,
              "slot": "178",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:105"
            },
            {
              "label": "minLockup",
              "offset": 0,
              "slot": "179",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:106"
            },
            {
              "label": "maxLockup",
              "offset": 0,
              "slot": "180",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:107"
            },
            {
              "label": "withdrawalPeriodEpochValue",
              "offset": 0,
              "slot": "181",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:108"
            },
            {
              "label": "withdrawalPeriodTimeValue",
              "offset": 0,
              "slot": "182",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:109"
            },
            {
              "label": "slashingRefundRatio",
              "offset": 0,
              "slot": "183",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:111"
            },
            {
              "label": "stakeTokenizerAddress",
              "offset": 0,
              "slot": "184",
              "type": "t_address",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:113"
            },
            {
              "label": "time",
              "offset": 0,
              "slot": "185",
              "type": "t_uint256",
              "contract": "UnitTestSFC",
              "src": "contracts\\test\\UnitTestSFC.sol:12"
            },
            {
              "label": "allowedNonNodeCalls",
              "offset": 0,
              "slot": "186",
              "type": "t_bool",
              "contract": "UnitTestSFC",
              "src": "contracts\\test\\UnitTestSFC.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(NodeDriverAuth)6107": {
              "label": "contract NodeDriverAuth",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)6627_storage)))": {
              "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct SFC.WithdrawalRequest)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedDelegation)6644_storage))": {
              "label": "mapping(address => mapping(uint256 => struct SFC.LockedDelegation))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)6608_storage))": {
              "label": "mapping(address => mapping(uint256 => struct SFC.Rewards))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)6627_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct SFC.WithdrawalRequest))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(EpochSnapshot)6704_storage)": {
              "label": "mapping(uint256 => struct SFC.EpochSnapshot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LockedDelegation)6644_storage)": {
              "label": "mapping(uint256 => struct SFC.LockedDelegation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Rewards)6608_storage)": {
              "label": "mapping(uint256 => struct SFC.Rewards)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Validator)6577_storage)": {
              "label": "mapping(uint256 => struct SFC.Validator)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(WithdrawalRequest)6627_storage)": {
              "label": "mapping(uint256 => struct SFC.WithdrawalRequest)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EpochSnapshot)6704_storage": {
              "label": "struct SFC.EpochSnapshot",
              "members": [
                {
                  "label": "receivedStake",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accumulatedRewardPerToken",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "accumulatedUptime",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "accumulatedOriginatedTxsFee",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "offlineTime",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "offlineBlocks",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "validatorIDs",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "epochFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "totalBaseRewardWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "totalTxRewardWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "baseRewardPerSecond",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "totalStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(LockedDelegation)6644_storage": {
              "label": "struct SFC.LockedDelegation",
              "members": [
                {
                  "label": "lockedStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "fromEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Rewards)6608_storage": {
              "label": "struct SFC.Rewards",
              "members": [
                {
                  "label": "lockupExtraReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lockupBaseReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unlockedReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Validator)6577_storage": {
              "label": "struct SFC.Validator",
              "members": [
                {
                  "label": "status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "deactivatedTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "deactivatedEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "receivedStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "createdEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "createdTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "auth",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(WithdrawalRequest)6627_storage": {
              "label": "struct SFC.WithdrawalRequest",
              "members": [
                {
                  "label": "epoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "time",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Upgradability": {
        "src": "contracts\\upgrade\\Upgradability.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BytecodeMatcher": {
        "src": "contracts\\verifiers\\BytecodeMatcher.sol:8",
        "version": {
          "withMetadata": "1dcaf62175a9c62326e0313ddbb2077996306f17b41a109604d18a6dcdcdaa01",
          "withoutMetadata": "a1219555945207fc3bb6f382e47f60693f5703cfb553134fd3417e95d59b92d8",
          "linkedWithoutMetadata": "a1219555945207fc3bb6f382e47f60693f5703cfb553134fd3417e95d59b92d8"
        },
        "inherit": [
          "Initializable",
          "IProposalVerifier"
        ],
        "libraries": [
          "GetCode"
        ],
        "methods": [
          "initialize(address)",
          "verifyProposalParams(uint256,uint8,uint256,uint256,uint256[],uint256,uint256,uint256)",
          "verifyProposalContract(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "codeSample",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "BytecodeMatcher",
              "src": "contracts\\verifiers\\BytecodeMatcher.sol:11"
            },
            {
              "label": "codeHash",
              "offset": 0,
              "slot": "52",
              "type": "t_bytes32",
              "contract": "BytecodeMatcher",
              "src": "contracts\\verifiers\\BytecodeMatcher.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IProposalVerifier": {
        "src": "contracts\\verifiers\\IProposalVerifier.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProposalParams(uint256,uint8,uint256,uint256,uint256[],uint256,uint256,uint256)",
          "verifyProposalContract(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableVerifier": {
        "src": "contracts\\verifiers\\OwnableVerifier.sol:8",
        "version": {
          "withMetadata": "a4f917dee71b10513e5bdecc7c76f1fe5eaa071117c161091f351f9f246b29cc",
          "withoutMetadata": "a4f917dee71b10513e5bdecc7c76f1fe5eaa071117c161091f351f9f246b29cc",
          "linkedWithoutMetadata": "a4f917dee71b10513e5bdecc7c76f1fe5eaa071117c161091f351f9f246b29cc"
        },
        "inherit": [
          "Ownable",
          "Initializable",
          "IProposalVerifier"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "createProposal(address)",
          "verifyProposalParams(uint256,uint8,uint256,uint256,uint256[],uint256,uint256,uint256)",
          "verifyProposalContract(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OwnableVerifier",
            "src": "contracts\\verifiers\\OwnableVerifier.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(Governance)3957",
              "contract": "OwnableVerifier",
              "src": "contracts\\verifiers\\OwnableVerifier.sol:14"
            },
            {
              "label": "unlockedFor",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "OwnableVerifier",
              "src": "contracts\\verifiers\\OwnableVerifier.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(Governance)3957": {
              "label": "contract Governance",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ProposalTemplates": {
        "src": "contracts\\verifiers\\ProposalTemplates.sol:15",
        "version": {
          "withMetadata": "14ccade3df5ba68c8a0737e0f5ed8af7b45f5f4b77d46d6fdcc5c50fbc444b32",
          "withoutMetadata": "bb98c59a16995b0a925817c9633079a2c378fef8f221ed124c2b7ed20b283fac",
          "linkedWithoutMetadata": "bb98c59a16995b0a925817c9633079a2c378fef8f221ed124c2b7ed20b283fac"
        },
        "inherit": [
          "Version",
          "Ownable",
          "IProposalVerifier",
          "Initializable"
        ],
        "libraries": [
          "Decimal"
        ],
        "methods": [
          "initialize()",
          "exists(uint256)",
          "get(uint256)",
          "addTemplate(uint256,string,address,uint8,uint256,uint256,uint256[],uint256,uint256,uint256,uint256)",
          "eraseTemplate(uint256)",
          "verifyProposalParams(uint256,uint8,uint256,uint256,uint256[],uint256,uint256,uint256)",
          "verifyProposalContract(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            },
            {
              "label": "proposalTemplates",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_uint256,t_struct(ProposalTemplate)11754_storage)",
              "contract": "ProposalTemplates",
              "src": "contracts\\verifiers\\ProposalTemplates.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ExecType)4224": {
              "label": "enum Proposal.ExecType",
              "members": [
                "NONE",
                "CALL",
                "DELEGATECALL"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(ProposalTemplate)11754_storage)": {
              "label": "mapping(uint256 => struct ProposalTemplates.ProposalTemplate)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ProposalTemplate)11754_storage": {
              "label": "struct ProposalTemplates.ProposalTemplate",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "verifier",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executable",
                  "type": "t_enum(ExecType)4224",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "minVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minAgreement",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "opinionScales",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "minVotingDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "maxVotingDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "minStartDelay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "maxStartDelay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Version": {
        "src": "contracts\\version\\Version.sol:6",
        "version": {
          "withMetadata": "4e0b51a99864890ef538ad430b2362061069c830fd9dc37c2b15c2d8d3aaaee8",
          "withoutMetadata": "c928eced6e3066f3b9ec7b6a1f83ef80ffabaf3cae58675a9ac2878ac10f688a",
          "linkedWithoutMetadata": "c928eced6e3066f3b9ec7b6a1f83ef80ffabaf3cae58675a9ac2878ac10f688a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "SafeMath": {
        "src": "contracts\\common\\SafeMath.sol:16",
        "version": {
          "withMetadata": "d10ebbed170881055600b4bd9a927e55b8d7db4d9b5bb6fa605a0a070655515a",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RelayProxy": {
        "src": "contracts\\adapters\\RelayProxy.sol:5",
        "version": {
          "withMetadata": "aba090ba5a75e947c759e55447d93a120be91ac3deb9d05e5c7438625c60d257",
          "withoutMetadata": "f13c1fc665b263d696859f8429da80a89ea18aa6afdc013b8d630e77c26ebcce",
          "linkedWithoutMetadata": "f13c1fc665b263d696859f8429da80a89ea18aa6afdc013b8d630e77c26ebcce"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "__transferOwnership(address)",
          "__setDestination(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RelayProxy",
            "src": "contracts\\adapters\\RelayProxy.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "__destination",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "RelayProxy",
              "src": "contracts\\adapters\\RelayProxy.sol:6"
            },
            {
              "label": "__owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "RelayProxy",
              "src": "contracts\\adapters\\RelayProxy.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SFC": {
        "src": "contracts\\sfc\\SFC.sol:14",
        "version": {
          "withMetadata": "4ae1397d8c4a828f064013dc88070f4d66d10022d69ba17b4f8bec50a20ea5f5",
          "withoutMetadata": "739e27c807984057926173e455bf924e567008f96de43ea889d0c1ad7323d7dc",
          "linkedWithoutMetadata": "739e27c807984057926173e455bf924e567008f96de43ea889d0c1ad7323d7dc"
        },
        "inherit": [
          "Version",
          "StakersConstants",
          "GovernanceRole",
          "Ownable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "Decimal"
        ],
        "methods": [
          "currentEpoch()",
          "getEpochValidatorIDs(uint256)",
          "getEpochReceivedStake(uint256,uint256)",
          "getEpochAccumulatedRewardPerToken(uint256,uint256)",
          "getEpochAccumulatedUptime(uint256,uint256)",
          "getEpochAccumulatedOriginatedTxsFee(uint256,uint256)",
          "getEpochOfflineTime(uint256,uint256)",
          "getEpochOfflineBlocks(uint256,uint256)",
          "rewardsStash(address,uint256)",
          "getLockedStake(address,uint256)",
          "minSelfStake()",
          "maxDelegatedRatio()",
          "validatorCommission()",
          "contractCommission()",
          "unlockedRewardRatio()",
          "minLockupDuration()",
          "maxLockupDuration()",
          "withdrawalPeriodEpochs()",
          "withdrawalPeriodTime()",
          "initialize(uint256,uint256,address,address,address)",
          "setGenesisValidator(address,uint256,bytes,uint256,uint256,uint256,uint256,uint256)",
          "setGenesisDelegation(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "createValidator(bytes)",
          "getSelfStake(uint256)",
          "delegate(uint256)",
          "undelegate(uint256,uint256,uint256)",
          "isSlashed(uint256)",
          "withdraw(uint256,uint256)",
          "deactivateValidator(uint256,uint256)",
          "pendingRewards(address,uint256)",
          "stashRewards(address,uint256)",
          "claimRewards(uint256)",
          "restakeRewards(uint256)",
          "_syncValidator(uint256,bool)",
          "offlinePenaltyThreshold()",
          "updateBaseRewardPerSecond(uint256)",
          "updateOfflinePenaltyThreshold(uint256,uint256)",
          "updateSlashingRefundRatio(uint256,uint256)",
          "updateStakeTokenizerAddress(address)",
          "updateTotalSupply(int256)",
          "mintFTM(address payable,uint256,string)",
          "sealEpoch(uint256[],uint256[],uint256[],uint256[])",
          "sealEpochValidators(uint256[])",
          "isLockedUp(address,uint256)",
          "getUnlockedStake(address,uint256)",
          "lockStake(uint256,uint256,uint256)",
          "relockStake(uint256,uint256,uint256)",
          "unlockStake(uint256,uint256)",
          "setMaxDelegation(uint256)",
          "setMinSelfStake(uint256)",
          "setValidatorCommission(uint256)",
          "setContractCommission(uint256)",
          "setUnlockedRewardRatio(uint256)",
          "setMinLockupDuration(uint256)",
          "setMaxLockupDuration(uint256)",
          "setWithdrawalPeriodEpoch(uint256)",
          "setWithdrawalPeriodTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            },
            {
              "label": "_governance",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "GovernanceRole",
              "src": "contracts\\ownership\\GovernanceRole.sol:18"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "GovernanceRole",
              "src": "contracts\\ownership\\GovernanceRole.sol:19"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)50_storage",
              "contract": "GovernanceRole",
              "src": "contracts\\ownership\\GovernanceRole.sol:112"
            },
            {
              "label": "node",
              "offset": 0,
              "slot": "154",
              "type": "t_contract(NodeDriverAuth)6107",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:30"
            },
            {
              "label": "currentSealedEpoch",
              "offset": 0,
              "slot": "155",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:32"
            },
            {
              "label": "getValidator",
              "offset": 0,
              "slot": "156",
              "type": "t_mapping(t_uint256,t_struct(Validator)6577_storage)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:33"
            },
            {
              "label": "getValidatorID",
              "offset": 0,
              "slot": "157",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:34"
            },
            {
              "label": "getValidatorPubkey",
              "offset": 0,
              "slot": "158",
              "type": "t_mapping(t_uint256,t_bytes_storage)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:35"
            },
            {
              "label": "lastValidatorID",
              "offset": 0,
              "slot": "159",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:37"
            },
            {
              "label": "totalStake",
              "offset": 0,
              "slot": "160",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:38"
            },
            {
              "label": "totalActiveStake",
              "offset": 0,
              "slot": "161",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:39"
            },
            {
              "label": "totalSlashedStake",
              "offset": 0,
              "slot": "162",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:40"
            },
            {
              "label": "_rewardsStash",
              "offset": 0,
              "slot": "163",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)6608_storage))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:48"
            },
            {
              "label": "stashedRewardsUntilEpoch",
              "offset": 0,
              "slot": "164",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:50"
            },
            {
              "label": "getWithdrawalRequest",
              "offset": 0,
              "slot": "165",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)6627_storage)))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:59"
            },
            {
              "label": "getStake",
              "offset": 0,
              "slot": "166",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:69"
            },
            {
              "label": "getLockupInfo",
              "offset": 0,
              "slot": "167",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedDelegation)6644_storage))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:71"
            },
            {
              "label": "getStashedLockupRewards",
              "offset": 0,
              "slot": "168",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)6608_storage))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:74"
            },
            {
              "label": "baseRewardPerSecond",
              "offset": 0,
              "slot": "169",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:94"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "170",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:95"
            },
            {
              "label": "getEpochSnapshot",
              "offset": 0,
              "slot": "171",
              "type": "t_mapping(t_uint256,t_struct(EpochSnapshot)6704_storage)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:96"
            },
            {
              "label": "offlinePenaltyThresholdBlocksNum",
              "offset": 0,
              "slot": "172",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:98"
            },
            {
              "label": "offlinePenaltyThresholdTime",
              "offset": 0,
              "slot": "173",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:99"
            },
            {
              "label": "minStakeAmnt",
              "offset": 0,
              "slot": "174",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:101"
            },
            {
              "label": "maxDelegation",
              "offset": 0,
              "slot": "175",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:102"
            },
            {
              "label": "validatorCommissionFee",
              "offset": 0,
              "slot": "176",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:103"
            },
            {
              "label": "contractCommissionFee",
              "offset": 0,
              "slot": "177",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:104"
            },
            {
              "label": "unlockedReward",
              "offset": 0,
              "slot": "178",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:105"
            },
            {
              "label": "minLockup",
              "offset": 0,
              "slot": "179",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:106"
            },
            {
              "label": "maxLockup",
              "offset": 0,
              "slot": "180",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:107"
            },
            {
              "label": "withdrawalPeriodEpochValue",
              "offset": 0,
              "slot": "181",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:108"
            },
            {
              "label": "withdrawalPeriodTimeValue",
              "offset": 0,
              "slot": "182",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:109"
            },
            {
              "label": "slashingRefundRatio",
              "offset": 0,
              "slot": "183",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:111"
            },
            {
              "label": "stakeTokenizerAddress",
              "offset": 0,
              "slot": "184",
              "type": "t_address",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(NodeDriverAuth)6107": {
              "label": "contract NodeDriverAuth",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)6627_storage)))": {
              "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct SFC.WithdrawalRequest)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedDelegation)6644_storage))": {
              "label": "mapping(address => mapping(uint256 => struct SFC.LockedDelegation))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)6608_storage))": {
              "label": "mapping(address => mapping(uint256 => struct SFC.Rewards))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)6627_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct SFC.WithdrawalRequest))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(EpochSnapshot)6704_storage)": {
              "label": "mapping(uint256 => struct SFC.EpochSnapshot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LockedDelegation)6644_storage)": {
              "label": "mapping(uint256 => struct SFC.LockedDelegation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Rewards)6608_storage)": {
              "label": "mapping(uint256 => struct SFC.Rewards)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Validator)6577_storage)": {
              "label": "mapping(uint256 => struct SFC.Validator)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(WithdrawalRequest)6627_storage)": {
              "label": "mapping(uint256 => struct SFC.WithdrawalRequest)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EpochSnapshot)6704_storage": {
              "label": "struct SFC.EpochSnapshot",
              "members": [
                {
                  "label": "receivedStake",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accumulatedRewardPerToken",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "accumulatedUptime",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "accumulatedOriginatedTxsFee",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "offlineTime",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "offlineBlocks",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "validatorIDs",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "epochFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "totalBaseRewardWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "totalTxRewardWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "baseRewardPerSecond",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "totalStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(LockedDelegation)6644_storage": {
              "label": "struct SFC.LockedDelegation",
              "members": [
                {
                  "label": "lockedStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "fromEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Rewards)6608_storage": {
              "label": "struct SFC.Rewards",
              "members": [
                {
                  "label": "lockupExtraReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lockupBaseReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unlockedReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Validator)6577_storage": {
              "label": "struct SFC.Validator",
              "members": [
                {
                  "label": "status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "deactivatedTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "deactivatedEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "receivedStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "createdEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "createdTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "auth",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(WithdrawalRequest)6627_storage": {
              "label": "struct SFC.WithdrawalRequest",
              "members": [
                {
                  "label": "epoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "time",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SFCToGovernable": {
        "src": "contracts\\adapters\\SFCToGovernable.sol:19",
        "version": {
          "withMetadata": "0989f9330dfbab034d1abc569d32a3380ba65ca9ac5229e4b3b7eaabf1726328",
          "withoutMetadata": "67b1a6358e6653301bb5e85ea314821a7e367656c874e3061935bf1e69208814",
          "linkedWithoutMetadata": "67b1a6358e6653301bb5e85ea314821a7e367656c874e3061935bf1e69208814"
        },
        "inherit": [
          "Governable"
        ],
        "libraries": [],
        "methods": [
          "getTotalWeight()",
          "getReceivedWeight(address)",
          "getWeight(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "sfc",
            "src": "contracts\\adapters\\SFCToGovernable.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sfc",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SFC)383",
              "contract": "SFCToGovernable",
              "src": "contracts\\adapters\\SFCToGovernable.sol:20"
            }
          ],
          "types": {
            "t_contract(SFC)383": {
              "label": "contract SFC",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Decimal": {
        "src": "contracts\\common\\Decimal.sol:3",
        "version": {
          "withMetadata": "9b41a03176eee2388bc7bcdc3d60b7aaea378e603da276ec5697b70238a35018",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GetCode": {
        "src": "contracts\\common\\GetCode.sol:3",
        "version": {
          "withMetadata": "5f5fac698b01c50d18012be8a6e0b6d3ccda5881c0b51c4ff6dc385cd6a3db9e",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "contracts\\common\\Initializable.sol:16",
        "version": {
          "withMetadata": "a467b20eab82d425ad56b1b1884a46a2871f121b80e3540bcabe39526ecf3527",
          "withoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0",
          "linkedWithoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\common\\ReentrancyGuard.sol:16",
        "version": {
          "withMetadata": "08a080a3baae7111cf2de7d05c7dc81001063cd52c0218d1a71c6443ac3ae738",
          "withoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0",
          "linkedWithoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "51",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\common\\ReentrancyGuard.sol:18"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ReentrancyGuard",
              "src": "contracts\\common\\ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "contracts\\erc20\\base\\ERC20.sol:31",
        "version": {
          "withMetadata": "26e280606b12eab01545a4e0eca1407237cfe6564de8dc61ca84c28cd89d6106",
          "withoutMetadata": "59e97ea0984326e16ec095a5ffb9f3110a9e46b411a6a0d1dd7a63299cba01b7",
          "linkedWithoutMetadata": "59e97ea0984326e16ec095a5ffb9f3110a9e46b411a6a0d1dd7a63299cba01b7"
        },
        "inherit": [
          "IERC20",
          "Initializable"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:36"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:38"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "54",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:231"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Burnable": {
        "src": "contracts\\erc20\\base\\ERC20Burnable.sol:10",
        "version": {
          "withMetadata": "e9757ce37497a905d03d5c9fa53a0b18a603b1b5cf0688880a46b0a200423fa1",
          "withoutMetadata": "b747a231d956da9a91454ace147b9ff94b83fb688f6713d3f82c093c22c801c1",
          "linkedWithoutMetadata": "b747a231d956da9a91454ace147b9ff94b83fb688f6713d3f82c093c22c801c1"
        },
        "inherit": [
          "ERC20",
          "IERC20",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:36"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:38"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "54",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:231"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Detailed": {
        "src": "contracts\\erc20\\base\\ERC20Detailed.sol:9",
        "inherit": [
          "IERC20",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "51",
              "type": "t_string_storage",
              "contract": "ERC20Detailed",
              "src": "contracts\\erc20\\base\\ERC20Detailed.sol:10"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "52",
              "type": "t_string_storage",
              "contract": "ERC20Detailed",
              "src": "contracts\\erc20\\base\\ERC20Detailed.sol:11"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "53",
              "type": "t_uint8",
              "contract": "ERC20Detailed",
              "src": "contracts\\erc20\\base\\ERC20Detailed.sol:12"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "54",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20Detailed",
              "src": "contracts\\erc20\\base\\ERC20Detailed.sol:56"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Mintable": {
        "src": "contracts\\erc20\\base\\ERC20Mintable.sol:11",
        "version": {
          "withMetadata": "90c727f94cddce63809946d188b966fedc7b24cb99a366ee3faa24885b259772",
          "withoutMetadata": "613fd3fd60224a63354cf83b70f2f7d234f810734457b0d56840d26df057807a",
          "linkedWithoutMetadata": "613fd3fd60224a63354cf83b70f2f7d234f810734457b0d56840d26df057807a"
        },
        "inherit": [
          "MinterRole",
          "ERC20",
          "IERC20",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "mintingFinished()",
          "mint(address,uint256)",
          "finishMinting()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_mintingFinished",
            "src": "contracts\\erc20\\base\\ERC20Mintable.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:36"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:38"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "54",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20",
              "src": "contracts\\erc20\\base\\ERC20.sol:231"
            },
            {
              "label": "minters",
              "offset": 0,
              "slot": "104",
              "type": "t_struct(Role)1644_storage",
              "contract": "MinterRole",
              "src": "contracts\\erc20\\base\\MinterRole.sol:12"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "105",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MinterRole",
              "src": "contracts\\erc20\\base\\MinterRole.sol:37"
            },
            {
              "label": "_mintingFinished",
              "offset": 0,
              "slot": "155",
              "type": "t_bool",
              "contract": "ERC20Mintable",
              "src": "contracts\\erc20\\base\\ERC20Mintable.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Role)1644_storage": {
              "label": "struct Roles.Role",
              "members": [
                {
                  "label": "bearer",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\erc20\\base\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "MinterRole": {
        "src": "contracts\\erc20\\base\\MinterRole.sol:6",
        "version": {
          "withMetadata": "749fe7d790d76d4e4b15f11b097484cf29dbaf3f7cc8b0e3f496afb39549dfdf",
          "withoutMetadata": "cab9b38729dc83163b4060c438577d78fbe70a8db2849772cc53f20db747145c",
          "linkedWithoutMetadata": "cab9b38729dc83163b4060c438577d78fbe70a8db2849772cc53f20db747145c"
        },
        "inherit": [],
        "libraries": [
          "Roles"
        ],
        "methods": [
          "isMinter(address)",
          "renounceMinter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "minters",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Role)1644_storage",
              "contract": "MinterRole",
              "src": "contracts\\erc20\\base\\MinterRole.sol:12"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MinterRole",
              "src": "contracts\\erc20\\base\\MinterRole.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_struct(Role)1644_storage": {
              "label": "struct Roles.Role",
              "members": [
                {
                  "label": "bearer",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Roles": {
        "src": "contracts\\erc20\\base\\Roles.sol:8",
        "version": {
          "withMetadata": "dbfa538a5e358600041e59d58adf45e2be74f832b4619c7d5d0f9159a9329f92",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Constants": {
        "src": "contracts\\governance\\Constants.sol:48",
        "version": {
          "withMetadata": "8d7249ffc041fae52a2b97d00f1928f9078c30cfb69487f3e354d72ee916c319",
          "withoutMetadata": "e3c003c295bb5953d5e6c500d59e847d6999d3a7bf0ef241329a97a89b3d8861",
          "linkedWithoutMetadata": "e3c003c295bb5953d5e6c500d59e847d6999d3a7bf0ef241329a97a89b3d8861"
        },
        "inherit": [
          "StatusConstants"
        ],
        "libraries": [
          "SafeMath",
          "Decimal"
        ],
        "methods": [
          "minVotesAbsolute(uint256,uint256)",
          "bytes32ToString(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StatusConstants": {
        "src": "contracts\\governance\\Constants.sol:6",
        "version": {
          "withMetadata": "21cece588531d692a9ba8b64f5cf72fba90ecfd6f4496972fb89856c63acd393",
          "withoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0",
          "linkedWithoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Governance": {
        "src": "contracts\\governance\\Governance.sol:15",
        "version": {
          "withMetadata": "50a273681d6ef4f42b5ddb5396bd8bd3c979ef92421529040dc9d2c3d8ba139c",
          "withoutMetadata": "f0fce5364f59416b5c20e2a1f74ff1844829227c42b61601bc88d234644ced69",
          "linkedWithoutMetadata": "f0fce5364f59416b5c20e2a1f74ff1844829227c42b61601bc88d234644ced69"
        },
        "inherit": [
          "Version",
          "GovernanceSettings",
          "Constants",
          "StatusConstants",
          "ReentrancyGuard",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "LRC",
          "Proposal"
        ],
        "methods": [
          "initialize(address,address)",
          "proposalParams(uint256)",
          "proposalOptionState(uint256,uint256)",
          "proposalState(uint256)",
          "getVote(address,address,uint256)",
          "tasksCount()",
          "getTask(uint256)",
          "vote(address,uint256,uint256[])",
          "createProposal(address)",
          "cancelProposal(uint256)",
          "handleTasks(uint256,uint256)",
          "tasksCleanup(uint256)",
          "calculateVotingTally(uint256)",
          "cancelVote(address,uint256)",
          "recountVote(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts\\governance\\Governance.sol:283"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "51",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\common\\ReentrancyGuard.sol:18"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ReentrancyGuard",
              "src": "contracts\\common\\ReentrancyGuard.sol:40"
            },
            {
              "label": "governableContract",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(Governable)4268",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:41"
            },
            {
              "label": "proposalVerifier",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IProposalVerifier)11594",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:42"
            },
            {
              "label": "lastProposalID",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:43"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "105",
              "type": "t_array(t_struct(Task)1916_storage)dyn_storage",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:44"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_struct(ProposalState)1909_storage)",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:46"
            },
            {
              "label": "overriddenWeight",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:47"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(Vote)1896_storage)))",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Task)1916_storage)dyn_storage": {
              "label": "struct Governance.Task[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(Governable)4268": {
              "label": "contract Governable",
              "numberOfBytes": "20"
            },
            "t_contract(IProposalVerifier)11594": {
              "label": "contract IProposalVerifier",
              "numberOfBytes": "20"
            },
            "t_enum(ExecType)4224": {
              "label": "enum Proposal.ExecType",
              "members": [
                "NONE",
                "CALL",
                "DELEGATECALL"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(Vote)1896_storage)))": {
              "label": "mapping(address => mapping(address => mapping(uint256 => struct Governance.Vote)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Vote)1896_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Governance.Vote))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Option)4055_storage)": {
              "label": "mapping(uint256 => struct LRC.Option)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalState)1909_storage)": {
              "label": "mapping(uint256 => struct Governance.ProposalState)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Vote)1896_storage)": {
              "label": "mapping(uint256 => struct Governance.Vote)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Option)4055_storage": {
              "label": "struct LRC.Option",
              "members": [
                {
                  "label": "votes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "agreement",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Parameters)4243_storage": {
              "label": "struct Proposal.Parameters",
              "members": [
                {
                  "label": "pType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "executable",
                  "type": "t_enum(ExecType)4224",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minAgreement",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "opinionScales",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "proposalContract",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "options",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "deadlines",
                  "type": "t_struct(Timeline)4220_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(ProposalState)1909_storage": {
              "label": "struct Governance.ProposalState",
              "members": [
                {
                  "label": "params",
                  "type": "t_struct(Parameters)4243_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "options",
                  "type": "t_mapping(t_uint256,t_struct(Option)4055_storage)",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "winnerOptionID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "votes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Task)1916_storage": {
              "label": "struct Governance.Task",
              "members": [
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "assignment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "proposalID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Timeline)4220_storage": {
              "label": "struct Proposal.Timeline",
              "members": [
                {
                  "label": "votingStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votingMinEndTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "votingMaxEndTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Vote)1896_storage": {
              "label": "struct Governance.Vote",
              "members": [
                {
                  "label": "weight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "choices",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernanceSettings": {
        "src": "contracts\\governance\\GovernanceSettings.sol:12",
        "version": {
          "withMetadata": "85b70229228af5e18af2f871a893f36a796fd026300d993526e072fdd5f89751",
          "withoutMetadata": "cf9f40d6cff8718fb8b3a32bedf0671e47dcd22325ef6c0847a396588b46970e",
          "linkedWithoutMetadata": "cf9f40d6cff8718fb8b3a32bedf0671e47dcd22325ef6c0847a396588b46970e"
        },
        "inherit": [
          "Constants",
          "StatusConstants"
        ],
        "libraries": [],
        "methods": [
          "proposalFee()",
          "proposalBurntFee()",
          "taskHandlingReward()",
          "taskErasingReward()",
          "maxOptions()",
          "maxExecutionPeriod()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LRC": {
        "src": "contracts\\governance\\LRC.sol:9",
        "version": {
          "withMetadata": "6f13707eb8de9bcb07349388e658b93f88951939d0d18ea037f8a2668e728bc3",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Decimal"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Proposal": {
        "src": "contracts\\governance\\Proposal.sol:5",
        "version": {
          "withMetadata": "1bf4679c169f734e9c2277a824485211c51a1eed9a23dacf4204ddea7198861b",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Governable": {
        "src": "contracts\\model\\Governable.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTotalWeight()",
          "getReceivedWeight(address)",
          "getWeight(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovernanceRole": {
        "src": "contracts\\ownership\\GovernanceRole.sol:13",
        "version": {
          "withMetadata": "0bef51c67d14858f3b4fabc5b0fef5837645b4de08c25e12025aa5cd2a04dad1",
          "withoutMetadata": "a81047f897f769002caecf8a524d69e5f3038c3aa2776bba6097e3b4af3e69bb",
          "linkedWithoutMetadata": "a81047f897f769002caecf8a524d69e5f3038c3aa2776bba6097e3b4af3e69bb"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "governance()",
          "isGovernance()",
          "transferGovernance(address)",
          "owner()",
          "isOwner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_governance",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "GovernanceRole",
              "src": "contracts\\ownership\\GovernanceRole.sol:18"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "GovernanceRole",
              "src": "contracts\\ownership\\GovernanceRole.sol:19"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)50_storage",
              "contract": "GovernanceRole",
              "src": "contracts\\ownership\\GovernanceRole.sol:112"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Ownable": {
        "src": "contracts\\ownership\\Ownable.sol:14",
        "version": {
          "withMetadata": "333f233460930a59d7470a49755e239311647425f2af076e7b3156c20f8e5e63",
          "withoutMetadata": "9a175aae8b6ce193ed673d711cb1359bca74ca946ba8fa8a8e0b82a894149dfb",
          "linkedWithoutMetadata": "9a175aae8b6ce193ed673d711cb1359bca74ca946ba8fa8a8e0b82a894149dfb"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PlainTextProposal": {
        "src": "contracts\\proposal\\PlainTextProposal.sol:9",
        "version": {
          "withMetadata": "0e75f862012cf0b5b41be07e1ab29728eef06940b81521e6a72756f4146f8432",
          "withoutMetadata": "0e75f862012cf0b5b41be07e1ab29728eef06940b81521e6a72756f4146f8432",
          "linkedWithoutMetadata": "0e75f862012cf0b5b41be07e1ab29728eef06940b81521e6a72756f4146f8432"
        },
        "inherit": [
          "Cancelable",
          "Ownable",
          "Initializable",
          "NonExecutableProposal",
          "BaseProposal",
          "IProposal"
        ],
        "libraries": [],
        "methods": [
          "(string,string,bytes32[],uint256,uint256,uint256,uint256,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PlainTextProposal",
            "src": "contracts\\proposal\\PlainTextProposal.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:24"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "61",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoftwareUpgradeProposal": {
        "src": "contracts\\proposal\\SoftwareUpgradeProposal.sol:10",
        "version": {
          "withMetadata": "2cbffb22d40c2059c2e8513d32cea6e7f26286759e6a9c048edefd50577f5275",
          "withoutMetadata": "2cbffb22d40c2059c2e8513d32cea6e7f26286759e6a9c048edefd50577f5275",
          "linkedWithoutMetadata": "2cbffb22d40c2059c2e8513d32cea6e7f26286759e6a9c048edefd50577f5275"
        },
        "inherit": [
          "Cancelable",
          "Ownable",
          "Initializable",
          "DelegatecallExecutableProposal",
          "BaseProposal",
          "IProposal"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,uint256,uint256,uint256,uint256,address,address,address)",
          "execute_delegatecall(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoftwareUpgradeProposal",
            "src": "contracts\\proposal\\SoftwareUpgradeProposal.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:24"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "61",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            },
            {
              "label": "upgradeableContract",
              "offset": 0,
              "slot": "111",
              "type": "t_address",
              "contract": "SoftwareUpgradeProposal",
              "src": "contracts\\proposal\\SoftwareUpgradeProposal.sol:11"
            },
            {
              "label": "newImplementation",
              "offset": 0,
              "slot": "112",
              "type": "t_address",
              "contract": "SoftwareUpgradeProposal",
              "src": "contracts\\proposal\\SoftwareUpgradeProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BaseProposal": {
        "src": "contracts\\proposal\\base\\BaseProposal.sol:11",
        "version": {
          "withMetadata": "598d4b1980b14f09d749adde8041ac48e70559942a3135b4a15c2b59b17d9fc5",
          "withoutMetadata": "3ad110707e6647407ac4ee60071b1c5cc55ffeace426dd404feb8f9ae01061fc",
          "linkedWithoutMetadata": "3ad110707e6647407ac4ee60071b1c5cc55ffeace426dd404feb8f9ae01061fc"
        },
        "inherit": [
          "IProposal"
        ],
        "libraries": [
          "SafeMath",
          "Proposal"
        ],
        "methods": [
          "verifyProposalParams(address)",
          "pType()",
          "executable()",
          "minVotes()",
          "minAgreement()",
          "opinionScales()",
          "options()",
          "votingStartTime()",
          "votingMinEndTime()",
          "votingMaxEndTime()",
          "name()",
          "description()",
          "execute_delegatecall(address,uint256)",
          "execute_call(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:24"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CallExecutableProposal": {
        "src": "contracts\\proposal\\base\\CallExecutableProposal.sol:6",
        "version": {
          "withMetadata": "ccfac819d1269ad66c8e71e9622f7930b50596a6c7296418af24ebb752a2bd30",
          "withoutMetadata": "cceb9443c5f5a12ceba8ae64c2ad531e8f4368eb45ef0fe9169816df64aabb2f",
          "linkedWithoutMetadata": "cceb9443c5f5a12ceba8ae64c2ad531e8f4368eb45ef0fe9169816df64aabb2f"
        },
        "inherit": [
          "BaseProposal",
          "IProposal"
        ],
        "libraries": [
          "Proposal"
        ],
        "methods": [
          "executable()",
          "pType()",
          "execute_call(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:24"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Cancelable": {
        "src": "contracts\\proposal\\base\\Cancelable.sol:6",
        "version": {
          "withMetadata": "872ecc976aaa456924af5a67043a8fd5f2c15fafbd77204314e4bd9217b6492f",
          "withoutMetadata": "872ecc976aaa456924af5a67043a8fd5f2c15fafbd77204314e4bd9217b6492f",
          "linkedWithoutMetadata": "872ecc976aaa456924af5a67043a8fd5f2c15fafbd77204314e4bd9217b6492f"
        },
        "inherit": [
          "Ownable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "cancel(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Cancelable",
            "src": "contracts\\proposal\\base\\Cancelable.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DelegatecallExecutableProposal": {
        "src": "contracts\\proposal\\base\\DelegatecallExecutableProposal.sol:6",
        "version": {
          "withMetadata": "ddb9774aca5f1f0994279cf9609603bfa974d98930f0751f158251f68292677d",
          "withoutMetadata": "ba352828d3a480b2e58077a65031dffe1b68def957f49e5cab9d3319a3b164a3",
          "linkedWithoutMetadata": "ba352828d3a480b2e58077a65031dffe1b68def957f49e5cab9d3319a3b164a3"
        },
        "inherit": [
          "BaseProposal",
          "IProposal"
        ],
        "libraries": [
          "Proposal"
        ],
        "methods": [
          "executable()",
          "pType()",
          "execute_delegatecall(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:24"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IProposal": {
        "src": "contracts\\proposal\\base\\IProposal.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "pType()",
          "executable()",
          "minVotes()",
          "minAgreement()",
          "opinionScales()",
          "options()",
          "votingStartTime()",
          "votingMinEndTime()",
          "votingMaxEndTime()",
          "execute_call(uint256)",
          "execute_delegatecall(address,uint256)",
          "name()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NonExecutableProposal": {
        "src": "contracts\\proposal\\base\\NonExecutableProposal.sol:6",
        "version": {
          "withMetadata": "0ef83817c4841296a40df9b59726be8633ea099c407c601064dc7d888472c85b",
          "withoutMetadata": "6322dc033bd491432bf10bf111fe38a5504260604942e4573252f4e21d19f91f",
          "linkedWithoutMetadata": "6322dc033bd491432bf10bf111fe38a5504260604942e4573252f4e21d19f91f"
        },
        "inherit": [
          "BaseProposal",
          "IProposal"
        ],
        "libraries": [
          "Proposal"
        ],
        "methods": [
          "pType()",
          "executable()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:24"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AlteredPlainTextProposal": {
        "src": "contracts\\proposal\\test\\AlteredPlainTextProposal.sol:5",
        "version": {
          "withMetadata": "e78af9e2a8fb3dbb180aa61c21714458fa31df33f4eb45cb3ffff2c0b03367e5",
          "withoutMetadata": "e78af9e2a8fb3dbb180aa61c21714458fa31df33f4eb45cb3ffff2c0b03367e5",
          "linkedWithoutMetadata": "e78af9e2a8fb3dbb180aa61c21714458fa31df33f4eb45cb3ffff2c0b03367e5"
        },
        "inherit": [
          "PlainTextProposal",
          "Cancelable",
          "Ownable",
          "Initializable",
          "NonExecutableProposal",
          "BaseProposal",
          "IProposal"
        ],
        "libraries": [],
        "methods": [
          "(string,string,bytes32[],uint256,uint256,uint256,uint256,uint256,address)",
          "name()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AlteredPlainTextProposal",
            "src": "contracts\\proposal\\test\\AlteredPlainTextProposal.sol:6"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:24"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "61",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ExecLoggingProposal": {
        "src": "contracts\\proposal\\test\\ExecLoggingProposal.sol:7",
        "version": {
          "withMetadata": "0a2c59b9c8ab0a9cf1f2ef24dc548040066072efc96b513d71ecb9afaba83fc1",
          "withoutMetadata": "0a2c59b9c8ab0a9cf1f2ef24dc548040066072efc96b513d71ecb9afaba83fc1",
          "linkedWithoutMetadata": "0a2c59b9c8ab0a9cf1f2ef24dc548040066072efc96b513d71ecb9afaba83fc1"
        },
        "inherit": [
          "PlainTextProposal",
          "Cancelable",
          "Ownable",
          "Initializable",
          "NonExecutableProposal",
          "BaseProposal",
          "IProposal"
        ],
        "libraries": [],
        "methods": [
          "(string,string,bytes32[],uint256,uint256,uint256,uint256,uint256,address)",
          "setOpinionScales(uint256[])",
          "pType()",
          "executable()",
          "setExecutable(uint8)",
          "cancel(uint256,address)",
          "executeNonDelegateCall(address,address,uint256)",
          "execute_delegatecall(address,uint256)",
          "execute_call(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ExecLoggingProposal",
            "src": "contracts\\proposal\\test\\ExecLoggingProposal.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:24"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "9",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "61",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            },
            {
              "label": "_exec",
              "offset": 0,
              "slot": "111",
              "type": "t_enum(ExecType)4224",
              "contract": "ExecLoggingProposal",
              "src": "contracts\\proposal\\test\\ExecLoggingProposal.sol:8"
            },
            {
              "label": "executedCounter",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "ExecLoggingProposal",
              "src": "contracts\\proposal\\test\\ExecLoggingProposal.sol:34"
            },
            {
              "label": "executedMsgSender",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "ExecLoggingProposal",
              "src": "contracts\\proposal\\test\\ExecLoggingProposal.sol:35"
            },
            {
              "label": "executedAs",
              "offset": 0,
              "slot": "114",
              "type": "t_address",
              "contract": "ExecLoggingProposal",
              "src": "contracts\\proposal\\test\\ExecLoggingProposal.sol:36"
            },
            {
              "label": "executedOption",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "ExecLoggingProposal",
              "src": "contracts\\proposal\\test\\ExecLoggingProposal.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ExecType)4224": {
              "label": "enum Proposal.ExecType",
              "members": [
                "NONE",
                "CALL",
                "DELEGATECALL"
              ],
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ExplicitProposal": {
        "src": "contracts\\proposal\\test\\ExplicitProposal.sol:5",
        "version": {
          "withMetadata": "b0c68e34fe9e30bc7a3d848b8b2d384f24e27cab8f1094c6f360fc8aaebd6e49",
          "withoutMetadata": "ba89465663e66e8cf52bf07fe5cd9806e682a38a0fb1ff21658d03eb570b98ac",
          "linkedWithoutMetadata": "ba89465663e66e8cf52bf07fe5cd9806e682a38a0fb1ff21658d03eb570b98ac"
        },
        "inherit": [
          "BaseProposal",
          "IProposal"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "setType(uint256)",
          "setMinVotes(uint256)",
          "setMinAgreement(uint256)",
          "setOpinionScales(uint256[])",
          "setVotingStartTime(uint256)",
          "setVotingMinEndTime(uint256)",
          "setVotingMaxEndTime(uint256)",
          "setExecutable(uint8)",
          "setOptions(bytes32[])",
          "setName(string)",
          "setDescription(string)",
          "pType()",
          "executable()",
          "votingStartTime()",
          "votingMinEndTime()",
          "votingMaxEndTime()",
          "execute_delegatecall(address,uint256)",
          "execute_call(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:14"
            },
            {
              "label": "_description",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:15"
            },
            {
              "label": "_options",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:16"
            },
            {
              "label": "_minVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:18"
            },
            {
              "label": "_minAgreement",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:19"
            },
            {
              "label": "_opinionScales",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:20"
            },
            {
              "label": "_start",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:22"
            },
            {
              "label": "_minEnd",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:23"
            },
            {
              "label": "_maxEnd",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseProposal",
              "src": "contracts\\proposal\\base\\BaseProposal.sol:24"
            },
            {
              "label": "_pType",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ExplicitProposal",
              "src": "contracts\\proposal\\test\\ExplicitProposal.sol:8"
            },
            {
              "label": "_exec",
              "offset": 0,
              "slot": "10",
              "type": "t_enum(ExecType)4224",
              "contract": "ExplicitProposal",
              "src": "contracts\\proposal\\test\\ExplicitProposal.sol:9"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ExecType)4224": {
              "label": "enum Proposal.ExecType",
              "members": [
                "NONE",
                "CALL",
                "DELEGATECALL"
              ],
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NetworkInitializer": {
        "src": "contracts\\sfc\\NetworkInitializer.sol:6",
        "version": {
          "withMetadata": "fa7e082a70362e46d9fa339b97ebd308ee8704794f3fffa1da9463ccfe99682f",
          "withoutMetadata": "0a11995cd2343965b83c08360179ef595f8a694b3ec3b58e82f150fec0ccf747",
          "linkedWithoutMetadata": "0a11995cd2343965b83c08360179ef595f8a694b3ec3b58e82f150fec0ccf747"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initializeAll(uint256,uint256,address,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "selfdestruct",
            "src": "contracts\\sfc\\NetworkInitializer.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EVMWriter": {
        "src": "contracts\\sfc\\NodeDriver.sol:199",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setBalance(address,uint256)",
          "copyCode(address,address)",
          "swapCode(address,address)",
          "setStorage(address,bytes32,bytes32)",
          "incNonce(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NodeDriver": {
        "src": "contracts\\sfc\\NodeDriver.sol:101",
        "version": {
          "withMetadata": "be35bee116db0f28fc4d294f79e46071059f44deb83e437870a9c410ead460d6",
          "withoutMetadata": "c134281afc10a259ce8648962f5458252c3732ded76b4a64004c707149b52038",
          "linkedWithoutMetadata": "c134281afc10a259ce8648962f5458252c3732ded76b4a64004c707149b52038"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setBackend(address)",
          "initialize(address,address)",
          "setBalance(address,uint256)",
          "copyCode(address,address)",
          "swapCode(address,address)",
          "setStorage(address,bytes32,bytes32)",
          "incNonce(address,uint256)",
          "updateNetworkRules(bytes)",
          "updateNetworkVersion(uint256)",
          "advanceEpochs(uint256)",
          "updateValidatorWeight(uint256,uint256)",
          "updateValidatorPubkey(uint256,bytes)",
          "setGenesisValidator(address,uint256,bytes,uint256,uint256,uint256,uint256,uint256)",
          "setGenesisDelegation(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "deactivateValidator(uint256,uint256)",
          "sealEpochValidators(uint256[])",
          "sealEpoch(uint256[],uint256[],uint256[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "sfc",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(SFC)10932",
              "contract": "NodeDriver",
              "src": "contracts\\sfc\\NodeDriver.sol:102"
            },
            {
              "label": "backend",
              "offset": 0,
              "slot": "52",
              "type": "t_contract(NodeDriver)6502",
              "contract": "NodeDriver",
              "src": "contracts\\sfc\\NodeDriver.sol:103"
            },
            {
              "label": "evmWriter",
              "offset": 0,
              "slot": "53",
              "type": "t_contract(EVMWriter)6540",
              "contract": "NodeDriver",
              "src": "contracts\\sfc\\NodeDriver.sol:104"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(EVMWriter)6540": {
              "label": "contract EVMWriter",
              "numberOfBytes": "20"
            },
            "t_contract(NodeDriver)6502": {
              "label": "contract NodeDriver",
              "numberOfBytes": "20"
            },
            "t_contract(SFC)10932": {
              "label": "contract SFC",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NodeDriverAuth": {
        "src": "contracts\\sfc\\NodeDriver.sol:8",
        "version": {
          "withMetadata": "4393d4784d9abf89e00fce287f1ab1310f04eb63f829ac0f494390c2ba2b5413",
          "withoutMetadata": "1ca166c3151d8a4c633feddc8677b8dc574498eb84ee56374b63b1a5f97838e4",
          "linkedWithoutMetadata": "1ca166c3151d8a4c633feddc8677b8dc574498eb84ee56374b63b1a5f97838e4"
        },
        "inherit": [
          "Ownable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "initialize(address,address,address)",
          "migrateTo(address)",
          "incBalance(address,uint256)",
          "upgradeCode(address,address)",
          "copyCode(address,address)",
          "incNonce(address,uint256)",
          "updateNetworkRules(bytes)",
          "updateNetworkVersion(uint256)",
          "advanceEpochs(uint256)",
          "updateValidatorWeight(uint256,uint256)",
          "updateValidatorPubkey(uint256,bytes)",
          "setGenesisValidator(address,uint256,bytes,uint256,uint256,uint256,uint256,uint256)",
          "setGenesisDelegation(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "deactivateValidator(uint256,uint256)",
          "sealEpochValidators(uint256[])",
          "sealEpoch(uint256[],uint256[],uint256[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            },
            {
              "label": "sfc",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(SFC)10932",
              "contract": "NodeDriverAuth",
              "src": "contracts\\sfc\\NodeDriver.sol:11"
            },
            {
              "label": "driver",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(NodeDriver)6502",
              "contract": "NodeDriverAuth",
              "src": "contracts\\sfc\\NodeDriver.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(NodeDriver)6502": {
              "label": "contract NodeDriver",
              "numberOfBytes": "20"
            },
            "t_contract(SFC)10932": {
              "label": "contract SFC",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Spacer": {
        "src": "contracts\\sfc\\StakeTokenizer.sol:8",
        "version": {
          "withMetadata": "da5e03f03b32874bc1d40f47b970e0c13b932626b712da19e1b310c0ffa959c5",
          "withoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0",
          "linkedWithoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Spacer",
              "src": "contracts\\sfc\\StakeTokenizer.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StakeTokenizer": {
        "src": "contracts\\sfc\\StakeTokenizer.sol:12",
        "version": {
          "withMetadata": "81feb771d2e482ef8a82ed6f797117e51eae5bf52b3469e761ec9c29dada98fe",
          "withoutMetadata": "4be2a8e7fdfec41a2d963b80feb88ad15d6f7e0c80fbc37fbc1206f234ad277a",
          "linkedWithoutMetadata": "4be2a8e7fdfec41a2d963b80feb88ad15d6f7e0c80fbc37fbc1206f234ad277a"
        },
        "inherit": [
          "Initializable",
          "Spacer"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "mintSFTM(uint256)",
          "redeemSFTM(uint256,uint256)",
          "allowedToWithdrawStake(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Spacer",
              "src": "contracts\\sfc\\StakeTokenizer.sol:9"
            },
            {
              "label": "initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "sfc",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(SFC)10932",
              "contract": "StakeTokenizer",
              "src": "contracts\\sfc\\StakeTokenizer.sol:13"
            },
            {
              "label": "outstandingSFTM",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "StakeTokenizer",
              "src": "contracts\\sfc\\StakeTokenizer.sol:15"
            },
            {
              "label": "sFTMTokenAddress",
              "offset": 0,
              "slot": "53",
              "type": "t_address",
              "contract": "StakeTokenizer",
              "src": "contracts\\sfc\\StakeTokenizer.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SFC)10932": {
              "label": "contract SFC",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StakersConstants": {
        "src": "contracts\\sfc\\StakerConstants.sol:6",
        "version": {
          "withMetadata": "0cd2c2b8898101404317ae01c3fa1eb101880f3954afcd5e11019c35004e321e",
          "withoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0",
          "linkedWithoutMetadata": "7f2d58cc2fe2c8fb8725c9dc5086beed1e02e5e3c82f5ddf3a4ef452244d19b0"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StubEvmWriter": {
        "src": "contracts\\test\\StubEvmWriter.sol:5",
        "version": {
          "withMetadata": "a9f14efbf594541c9b595db990f67da4eef9a5eebd5ac250947be4aeb5251a53",
          "withoutMetadata": "80c4a61a540894d8188cd82226c2a766302c2297a62b5ee26e1fa5514e84d25c",
          "linkedWithoutMetadata": "80c4a61a540894d8188cd82226c2a766302c2297a62b5ee26e1fa5514e84d25c"
        },
        "inherit": [
          "EVMWriter"
        ],
        "libraries": [],
        "methods": [
          "setBalance(address,uint256)",
          "copyCode(address,address)",
          "swapCode(address,address)",
          "setStorage(address,bytes32,bytes32)",
          "incNonce(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UnitTestGovernable": {
        "src": "contracts\\test\\UnitTestGovernable.sol:5",
        "version": {
          "withMetadata": "80f3eea3e66a27b5e6ee80e84f4a09189e6d603da7209a68183f93ebec024c4c",
          "withoutMetadata": "d24b4c23f8ddc483bd5deb6dbc4620bc06aea77bcad30f9d83a877ae193a4412",
          "linkedWithoutMetadata": "d24b4c23f8ddc483bd5deb6dbc4620bc06aea77bcad30f9d83a877ae193a4412"
        },
        "inherit": [
          "Governable"
        ],
        "libraries": [],
        "methods": [
          "stake(address,uint256)",
          "unstake(address,uint256)",
          "getTotalWeight()",
          "getReceivedWeight(address)",
          "getWeight(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "delegations",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnitTestGovernable",
              "src": "contracts\\test\\UnitTestGovernable.sol:6"
            },
            {
              "label": "rcvDelegations",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnitTestGovernable",
              "src": "contracts\\test\\UnitTestGovernable.sol:7"
            },
            {
              "label": "totalStake",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnitTestGovernable",
              "src": "contracts\\test\\UnitTestGovernable.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnitTestGovernance": {
        "src": "contracts\\test\\UnitTestGovernance.sol:5",
        "version": {
          "withMetadata": "b071c9465fecc6486a0dcdf0da943ef62b41c2df0b433298b15164ee423375b7",
          "withoutMetadata": "ad6025e8487c94609c7c8521296cb6b261b27f48bf41f6fd15f4ab0ca55d99ec",
          "linkedWithoutMetadata": "ad6025e8487c94609c7c8521296cb6b261b27f48bf41f6fd15f4ab0ca55d99ec"
        },
        "inherit": [
          "Governance",
          "Version",
          "GovernanceSettings",
          "Constants",
          "StatusConstants",
          "ReentrancyGuard",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proposalFee()",
          "proposalBurntFee()",
          "taskHandlingReward()",
          "taskErasingReward()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "51",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\common\\ReentrancyGuard.sol:18"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ReentrancyGuard",
              "src": "contracts\\common\\ReentrancyGuard.sol:40"
            },
            {
              "label": "governableContract",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(Governable)4268",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:41"
            },
            {
              "label": "proposalVerifier",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IProposalVerifier)11594",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:42"
            },
            {
              "label": "lastProposalID",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:43"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "105",
              "type": "t_array(t_struct(Task)1916_storage)dyn_storage",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:44"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_struct(ProposalState)1909_storage)",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:46"
            },
            {
              "label": "overriddenWeight",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:47"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(Vote)1896_storage)))",
              "contract": "Governance",
              "src": "contracts\\governance\\Governance.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Task)1916_storage)dyn_storage": {
              "label": "struct Governance.Task[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(Governable)4268": {
              "label": "contract Governable",
              "numberOfBytes": "20"
            },
            "t_contract(IProposalVerifier)11594": {
              "label": "contract IProposalVerifier",
              "numberOfBytes": "20"
            },
            "t_enum(ExecType)4224": {
              "label": "enum Proposal.ExecType",
              "members": [
                "NONE",
                "CALL",
                "DELEGATECALL"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(Vote)1896_storage)))": {
              "label": "mapping(address => mapping(address => mapping(uint256 => struct Governance.Vote)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Vote)1896_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Governance.Vote))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Option)4055_storage)": {
              "label": "mapping(uint256 => struct LRC.Option)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalState)1909_storage)": {
              "label": "mapping(uint256 => struct Governance.ProposalState)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Vote)1896_storage)": {
              "label": "mapping(uint256 => struct Governance.Vote)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Option)4055_storage": {
              "label": "struct LRC.Option",
              "members": [
                {
                  "label": "votes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "agreement",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Parameters)4243_storage": {
              "label": "struct Proposal.Parameters",
              "members": [
                {
                  "label": "pType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "executable",
                  "type": "t_enum(ExecType)4224",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minAgreement",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "opinionScales",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "proposalContract",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "options",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "deadlines",
                  "type": "t_struct(Timeline)4220_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(ProposalState)1909_storage": {
              "label": "struct Governance.ProposalState",
              "members": [
                {
                  "label": "params",
                  "type": "t_struct(Parameters)4243_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "options",
                  "type": "t_mapping(t_uint256,t_struct(Option)4055_storage)",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "winnerOptionID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "votes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Task)1916_storage": {
              "label": "struct Governance.Task",
              "members": [
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "assignment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "proposalID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Timeline)4220_storage": {
              "label": "struct Proposal.Timeline",
              "members": [
                {
                  "label": "votingStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votingMinEndTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "votingMaxEndTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Vote)1896_storage": {
              "label": "struct Governance.Vote",
              "members": [
                {
                  "label": "weight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "choices",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnitTestSFC": {
        "src": "contracts\\test\\UnitTestSFC.sol:5",
        "version": {
          "withMetadata": "89a71ac68f5f275c829d3a1b2b9a1c07833d8a999fbee59dd69941cd0de9a44c",
          "withoutMetadata": "8881d29de19be4ad19bb8c8423f30cf834e5b11d878881359ead06a0d2fcd44f",
          "linkedWithoutMetadata": "8881d29de19be4ad19bb8c8423f30cf834e5b11d878881359ead06a0d2fcd44f"
        },
        "inherit": [
          "SFC",
          "Version",
          "StakersConstants",
          "GovernanceRole",
          "Ownable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "minSelfStake()",
          "rebaseTime()",
          "advanceTime(uint256)",
          "getTime()",
          "getBlockTime()",
          "highestLockupEpoch(address,uint256)",
          "enableNonNodeCalls()",
          "disableNonNodeCalls()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            },
            {
              "label": "_governance",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "GovernanceRole",
              "src": "contracts\\ownership\\GovernanceRole.sol:18"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "GovernanceRole",
              "src": "contracts\\ownership\\GovernanceRole.sol:19"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)50_storage",
              "contract": "GovernanceRole",
              "src": "contracts\\ownership\\GovernanceRole.sol:112"
            },
            {
              "label": "node",
              "offset": 0,
              "slot": "154",
              "type": "t_contract(NodeDriverAuth)6107",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:30"
            },
            {
              "label": "currentSealedEpoch",
              "offset": 0,
              "slot": "155",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:32"
            },
            {
              "label": "getValidator",
              "offset": 0,
              "slot": "156",
              "type": "t_mapping(t_uint256,t_struct(Validator)6577_storage)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:33"
            },
            {
              "label": "getValidatorID",
              "offset": 0,
              "slot": "157",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:34"
            },
            {
              "label": "getValidatorPubkey",
              "offset": 0,
              "slot": "158",
              "type": "t_mapping(t_uint256,t_bytes_storage)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:35"
            },
            {
              "label": "lastValidatorID",
              "offset": 0,
              "slot": "159",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:37"
            },
            {
              "label": "totalStake",
              "offset": 0,
              "slot": "160",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:38"
            },
            {
              "label": "totalActiveStake",
              "offset": 0,
              "slot": "161",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:39"
            },
            {
              "label": "totalSlashedStake",
              "offset": 0,
              "slot": "162",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:40"
            },
            {
              "label": "_rewardsStash",
              "offset": 0,
              "slot": "163",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)6608_storage))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:48"
            },
            {
              "label": "stashedRewardsUntilEpoch",
              "offset": 0,
              "slot": "164",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:50"
            },
            {
              "label": "getWithdrawalRequest",
              "offset": 0,
              "slot": "165",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)6627_storage)))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:59"
            },
            {
              "label": "getStake",
              "offset": 0,
              "slot": "166",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:69"
            },
            {
              "label": "getLockupInfo",
              "offset": 0,
              "slot": "167",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedDelegation)6644_storage))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:71"
            },
            {
              "label": "getStashedLockupRewards",
              "offset": 0,
              "slot": "168",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)6608_storage))",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:74"
            },
            {
              "label": "baseRewardPerSecond",
              "offset": 0,
              "slot": "169",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:94"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "170",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:95"
            },
            {
              "label": "getEpochSnapshot",
              "offset": 0,
              "slot": "171",
              "type": "t_mapping(t_uint256,t_struct(EpochSnapshot)6704_storage)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:96"
            },
            {
              "label": "offlinePenaltyThresholdBlocksNum",
              "offset": 0,
              "slot": "172",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:98"
            },
            {
              "label": "offlinePenaltyThresholdTime",
              "offset": 0,
              "slot": "173",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:99"
            },
            {
              "label": "minStakeAmnt",
              "offset": 0,
              "slot": "174",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:101"
            },
            {
              "label": "maxDelegation",
              "offset": 0,
              "slot": "175",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:102"
            },
            {
              "label": "validatorCommissionFee",
              "offset": 0,
              "slot": "176",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:103"
            },
            {
              "label": "contractCommissionFee",
              "offset": 0,
              "slot": "177",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:104"
            },
            {
              "label": "unlockedReward",
              "offset": 0,
              "slot": "178",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:105"
            },
            {
              "label": "minLockup",
              "offset": 0,
              "slot": "179",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:106"
            },
            {
              "label": "maxLockup",
              "offset": 0,
              "slot": "180",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:107"
            },
            {
              "label": "withdrawalPeriodEpochValue",
              "offset": 0,
              "slot": "181",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:108"
            },
            {
              "label": "withdrawalPeriodTimeValue",
              "offset": 0,
              "slot": "182",
              "type": "t_uint256",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:109"
            },
            {
              "label": "slashingRefundRatio",
              "offset": 0,
              "slot": "183",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:111"
            },
            {
              "label": "stakeTokenizerAddress",
              "offset": 0,
              "slot": "184",
              "type": "t_address",
              "contract": "SFC",
              "src": "contracts\\sfc\\SFC.sol:113"
            },
            {
              "label": "time",
              "offset": 0,
              "slot": "185",
              "type": "t_uint256",
              "contract": "UnitTestSFC",
              "src": "contracts\\test\\UnitTestSFC.sol:12"
            },
            {
              "label": "allowedNonNodeCalls",
              "offset": 0,
              "slot": "186",
              "type": "t_bool",
              "contract": "UnitTestSFC",
              "src": "contracts\\test\\UnitTestSFC.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(NodeDriverAuth)6107": {
              "label": "contract NodeDriverAuth",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)6627_storage)))": {
              "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct SFC.WithdrawalRequest)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedDelegation)6644_storage))": {
              "label": "mapping(address => mapping(uint256 => struct SFC.LockedDelegation))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Rewards)6608_storage))": {
              "label": "mapping(address => mapping(uint256 => struct SFC.Rewards))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(WithdrawalRequest)6627_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct SFC.WithdrawalRequest))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(EpochSnapshot)6704_storage)": {
              "label": "mapping(uint256 => struct SFC.EpochSnapshot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LockedDelegation)6644_storage)": {
              "label": "mapping(uint256 => struct SFC.LockedDelegation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Rewards)6608_storage)": {
              "label": "mapping(uint256 => struct SFC.Rewards)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Validator)6577_storage)": {
              "label": "mapping(uint256 => struct SFC.Validator)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(WithdrawalRequest)6627_storage)": {
              "label": "mapping(uint256 => struct SFC.WithdrawalRequest)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EpochSnapshot)6704_storage": {
              "label": "struct SFC.EpochSnapshot",
              "members": [
                {
                  "label": "receivedStake",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accumulatedRewardPerToken",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "accumulatedUptime",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "accumulatedOriginatedTxsFee",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "offlineTime",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "offlineBlocks",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "validatorIDs",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "epochFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "totalBaseRewardWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "totalTxRewardWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "baseRewardPerSecond",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "totalStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(LockedDelegation)6644_storage": {
              "label": "struct SFC.LockedDelegation",
              "members": [
                {
                  "label": "lockedStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "fromEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Rewards)6608_storage": {
              "label": "struct SFC.Rewards",
              "members": [
                {
                  "label": "lockupExtraReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lockupBaseReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unlockedReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Validator)6577_storage": {
              "label": "struct SFC.Validator",
              "members": [
                {
                  "label": "status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "deactivatedTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "deactivatedEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "receivedStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "createdEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "createdTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "auth",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(WithdrawalRequest)6627_storage": {
              "label": "struct SFC.WithdrawalRequest",
              "members": [
                {
                  "label": "epoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "time",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Upgradability": {
        "src": "contracts\\upgrade\\Upgradability.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BytecodeMatcher": {
        "src": "contracts\\verifiers\\BytecodeMatcher.sol:8",
        "version": {
          "withMetadata": "1dcaf62175a9c62326e0313ddbb2077996306f17b41a109604d18a6dcdcdaa01",
          "withoutMetadata": "a1219555945207fc3bb6f382e47f60693f5703cfb553134fd3417e95d59b92d8",
          "linkedWithoutMetadata": "a1219555945207fc3bb6f382e47f60693f5703cfb553134fd3417e95d59b92d8"
        },
        "inherit": [
          "Initializable",
          "IProposalVerifier"
        ],
        "libraries": [
          "GetCode"
        ],
        "methods": [
          "initialize(address)",
          "verifyProposalParams(uint256,uint8,uint256,uint256,uint256[],uint256,uint256,uint256)",
          "verifyProposalContract(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "codeSample",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "BytecodeMatcher",
              "src": "contracts\\verifiers\\BytecodeMatcher.sol:11"
            },
            {
              "label": "codeHash",
              "offset": 0,
              "slot": "52",
              "type": "t_bytes32",
              "contract": "BytecodeMatcher",
              "src": "contracts\\verifiers\\BytecodeMatcher.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IProposalVerifier": {
        "src": "contracts\\verifiers\\IProposalVerifier.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProposalParams(uint256,uint8,uint256,uint256,uint256[],uint256,uint256,uint256)",
          "verifyProposalContract(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableVerifier": {
        "src": "contracts\\verifiers\\OwnableVerifier.sol:8",
        "version": {
          "withMetadata": "a4f917dee71b10513e5bdecc7c76f1fe5eaa071117c161091f351f9f246b29cc",
          "withoutMetadata": "a4f917dee71b10513e5bdecc7c76f1fe5eaa071117c161091f351f9f246b29cc",
          "linkedWithoutMetadata": "a4f917dee71b10513e5bdecc7c76f1fe5eaa071117c161091f351f9f246b29cc"
        },
        "inherit": [
          "Ownable",
          "Initializable",
          "IProposalVerifier"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "createProposal(address)",
          "verifyProposalParams(uint256,uint8,uint256,uint256,uint256[],uint256,uint256,uint256)",
          "verifyProposalContract(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OwnableVerifier",
            "src": "contracts\\verifiers\\OwnableVerifier.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(Governance)3957",
              "contract": "OwnableVerifier",
              "src": "contracts\\verifiers\\OwnableVerifier.sol:14"
            },
            {
              "label": "unlockedFor",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "OwnableVerifier",
              "src": "contracts\\verifiers\\OwnableVerifier.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(Governance)3957": {
              "label": "contract Governance",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ProposalTemplates": {
        "src": "contracts\\verifiers\\ProposalTemplates.sol:15",
        "version": {
          "withMetadata": "14ccade3df5ba68c8a0737e0f5ed8af7b45f5f4b77d46d6fdcc5c50fbc444b32",
          "withoutMetadata": "bb98c59a16995b0a925817c9633079a2c378fef8f221ed124c2b7ed20b283fac",
          "linkedWithoutMetadata": "bb98c59a16995b0a925817c9633079a2c378fef8f221ed124c2b7ed20b283fac"
        },
        "inherit": [
          "Version",
          "Ownable",
          "IProposalVerifier",
          "Initializable"
        ],
        "libraries": [
          "Decimal"
        ],
        "methods": [
          "initialize()",
          "exists(uint256)",
          "get(uint256)",
          "addTemplate(uint256,string,address,uint8,uint256,uint256,uint256[],uint256,uint256,uint256,uint256)",
          "eraseTemplate(uint256)",
          "verifyProposalParams(uint256,uint8,uint256,uint256,uint256[],uint256,uint256,uint256)",
          "verifyProposalContract(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:21"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:26"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts\\common\\Initializable.sol:61"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:15"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Ownable",
              "src": "contracts\\ownership\\Ownable.sol:78"
            },
            {
              "label": "proposalTemplates",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_uint256,t_struct(ProposalTemplate)11754_storage)",
              "contract": "ProposalTemplates",
              "src": "contracts\\verifiers\\ProposalTemplates.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ExecType)4224": {
              "label": "enum Proposal.ExecType",
              "members": [
                "NONE",
                "CALL",
                "DELEGATECALL"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(ProposalTemplate)11754_storage)": {
              "label": "mapping(uint256 => struct ProposalTemplates.ProposalTemplate)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ProposalTemplate)11754_storage": {
              "label": "struct ProposalTemplates.ProposalTemplate",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "verifier",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executable",
                  "type": "t_enum(ExecType)4224",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "minVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minAgreement",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "opinionScales",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "minVotingDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "maxVotingDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "minStartDelay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "maxStartDelay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Version": {
        "src": "contracts\\version\\Version.sol:6",
        "version": {
          "withMetadata": "4e0b51a99864890ef538ad430b2362061069c830fd9dc37c2b15c2d8d3aaaee8",
          "withoutMetadata": "c928eced6e3066f3b9ec7b6a1f83ef80ffabaf3cae58675a9ac2878ac10f688a",
          "linkedWithoutMetadata": "c928eced6e3066f3b9ec7b6a1f83ef80ffabaf3cae58675a9ac2878ac10f688a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Migrations": {
        "src": "contracts\\Migrations.sol:4",
        "version": {
          "withMetadata": "835f15db42e6177453d5a537110735cdb706c185a7940f8224f51ef4ac2e3ad8",
          "withoutMetadata": "831713aa2d6773e57b8bf22e20984944ddffc1828043fc8354635480d89f6885",
          "linkedWithoutMetadata": "831713aa2d6773e57b8bf22e20984944ddffc1828043fc8354635480d89f6885"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "setCompleted(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Migrations",
            "src": "contracts\\Migrations.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Migrations",
              "src": "contracts\\Migrations.sol:5"
            },
            {
              "label": "last_completed_migration",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Migrations",
              "src": "contracts\\Migrations.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Migrations": {
        "src": "contracts\\sfc\\Migrations.sol:3",
        "version": {
          "withMetadata": "21e86140e1e5977440ad66e58efcf1ef3600316511f0da4b0587d75607abefcf",
          "withoutMetadata": "29a1222cf3f4e2083f44c152fa9ae6533eb7028cb2fc22220dfe1691686d4be6",
          "linkedWithoutMetadata": "29a1222cf3f4e2083f44c152fa9ae6533eb7028cb2fc22220dfe1691686d4be6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "setCompleted(uint256)",
          "upgrade(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Migrations",
            "src": "contracts\\sfc\\Migrations.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Migrations",
              "src": "contracts\\sfc\\Migrations.sol:4"
            },
            {
              "label": "last_completed_migration",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Migrations",
              "src": "contracts\\sfc\\Migrations.sol:5"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    }
  ]
}